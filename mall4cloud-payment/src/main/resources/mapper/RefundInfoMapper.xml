<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mall4j.cloud.payment.mapper.RefundInfoMapper">
  <resultMap id="refundInfoMap" type="com.mall4j.cloud.payment.model.RefundInfo">
    <id column="refund_id" property="refundId" />
    <result column="refund_number" property="refundNumber"/>
    <result column="create_time" property="createTime"/>
    <result column="update_time" property="updateTime"/>
    <result column="order_id" property="orderId"/>
    <result column="pay_id" property="payId"/>
    <result column="refund_status" property="refundStatus"/>
    <result column="refund_amount" property="refundAmount"/>
    <result column="pay_type" property="payType"/>
    <result column="callback_content" property="callbackContent"/>
    <result column="callback_time" property="callbackTime"/>
    <result column="un_success_group_order" property="unSuccessGroupOrder"/>
  </resultMap>
  <sql id="Vo_Column_List">
    `refund_id`,`refund_number`,`create_time`,`update_time`,`order_id`,`pay_id`,`refund_status`,`refund_amount`,`pay_type`,`callback_content`,`callback_time`,`un_success_group_order`
  </sql>
  <select id="list" resultMap="refundInfoMap">
    select <include refid="Vo_Column_List"/> from refund_info order by refund_id desc
  </select>
  <select id="getByRefundId" resultMap="refundInfoMap">
    select <include refid="Vo_Column_List"/> from refund_info where refund_id = #{refundId}
  </select>
  <select id="getByRefundNumber" resultMap="refundInfoMap">
    select <include refid="Vo_Column_List"/> from refund_info where refund_number = #{refundNumber}
  </select>
  <insert id="save">
    insert into refund_info (`refund_id`,`refund_number`,`order_id`,`pay_id`,`user_id`,`refund_status`,`refund_amount`,
                             `pay_type`,`callback_content`,`callback_time`,`un_success_group_order`)
    values (#{refundInfo.refundId},#{refundInfo.refundNumber},#{refundInfo.orderId},#{refundInfo.payId},#{refundInfo.userId},#{refundInfo.refundStatus},#{refundInfo.refundAmount},
            #{refundInfo.payType},#{refundInfo.callbackContent},#{refundInfo.callbackTime},#{refundInfo.unSuccessGroupOrder});
  </insert>
  <update id="update">
    update refund_info
    <set>
      <if test="refundInfo.orderId != null">
        `order_id` = #{refundInfo.orderId},
      </if>
      <if test="refundInfo.payId != null">
        `pay_id` = #{refundInfo.payId},
      </if>
      <if test="refundInfo.refundStatus != null">
        `refund_status` = #{refundInfo.refundStatus},
      </if>
      <if test="refundInfo.refundAmount != null">
        `refund_amount` = #{refundInfo.refundAmount},
      </if>
      <if test="refundInfo.payType != null">
        `pay_type` = #{refundInfo.payType},
      </if>
      <if test="refundInfo.callbackContent != null">
        `callback_content` = #{refundInfo.callbackContent},
      </if>
      <if test="refundInfo.callbackTime != null">
        `callback_time` = #{refundInfo.callbackTime},
      </if>
    </set>
    where refund_id = #{refundInfo.refundId}
  </update>
  <delete id="deleteById">
    delete from refund_info where refund_id = #{refundId}
  </delete>


  <select id="countByRefundId" resultType="int">
    select count(*)
    from refund_info
    where refund_id = #{refundId}
  </select>
  <select id="getRefundAccountDetail" resultType="com.mall4j.cloud.payment.vo.AccountDetailVO">
    SELECT
      SUM(CASE WHEN pay_type IN (1,3,4,5,8) THEN refund_amount ELSE 0 END) AS wechat_amount,
      SUM(CASE WHEN pay_type IN (2,6,7) THEN refund_amount ELSE 0 END) AS alipay_amount,
      SUM(CASE WHEN pay_type IN (9) THEN refund_amount ELSE 0 END) AS balance_amount
    FROM `refund_info` WHERE refund_status = 2
      AND callback_time &gt;= #{startTime} AND callback_time &lt;= #{endTime}
  </select>
  <select id="getRefundInfoVO" resultType="com.mall4j.cloud.payment.vo.RefundInfoVO">
    SELECT refund_id,order_id,pay_id,refund_status,refund_amount,pay_type,IF(refund_status = 1,callback_time,NULL) AS callback_time
    FROM `refund_info`
    WHERE refund_status = 2
    AND callback_time &gt;= #{startTime} AND callback_time &lt;= #{endTime}
    order by update_time desc
  </select>
</mapper>
