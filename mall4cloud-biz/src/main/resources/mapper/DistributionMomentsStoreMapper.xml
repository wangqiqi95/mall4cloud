<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mall4j.cloud.biz.mapper.cp.DistributionMomentsStoreMapper">
  <resultMap id="distributionMomentsStoreMap" type="com.mall4j.cloud.biz.model.cp.DistributionMomentsStore">
    <id column="id" property="id" />
    <result column="moments_id" property="momentsId"/>
    <result column="store_id" property="storeId"/>
    <result column="create_time" property="createTime"/>
    <result column="update_time" property="updateTime"/>
    <result column="type" property="type"/>
  </resultMap>
  <sql id="Vo_Column_List">
    `id`,`moments_id`,`store_id`,`create_time`,`update_time`,`type`,`type`
  </sql>
  <select id="list" resultMap="distributionMomentsStoreMap">
    select <include refid="Vo_Column_List"/> from distribution_moments_store order by id desc
  </select>
  <select id="getById" resultMap="distributionMomentsStoreMap">
    select <include refid="Vo_Column_List"/> from distribution_moments_store where id = #{id}
  </select>
    <select id="listByMomentsId" resultMap="distributionMomentsStoreMap">
      select <include refid="Vo_Column_List"/> from distribution_moments_store
      where moments_id = #{momentsId}
    </select>
  <select id="listByStoreId" resultMap="distributionMomentsStoreMap">
    select <include refid="Vo_Column_List"/> from distribution_moments_store
    where store_id = #{storeId}
  </select>
  <select id="countByMomentsId" resultType="java.lang.Integer">
    select count(id) from distribution_moments_store
    where moments_id = #{momentsId}
  </select>
  <insert id="save">
    insert into distribution_moments_store (`moments_id`,`store_id`,`type`)
    values (#{distributionMomentsStore.momentsId},#{distributionMomentsStore.storeId},#{distributionMomentsStore.type});
  </insert>
  <update id="update">
    update distribution_moments_store
    <set>
      <if test="distributionMomentsStore.momentsId != null">
        `moments_id` = #{distributionMomentsStore.momentsId},
      </if>
      <if test="distributionMomentsStore.storeId != null">
        `store_id` = #{distributionMomentsStore.storeId},
      </if>
      <if test="distributionMomentsStore.type != null">
        `type` = #{distributionMomentsStore.type},
      </if>
    </set>
    where id = #{distributionMomentsStore.id}
  </update>
  <delete id="deleteById">
    delete from distribution_moments_store where id = #{id}
  </delete>

  <delete id="deleteByMomentsIdNotInStoreIds">
     delete from distribution_moments_store
     where moments_id = #{momentsId}
     and store_id not in
    <foreach collection="storeIds" item="storeId" open="(" close=")" separator=",">
      #{storeId}
    </foreach>
  </delete>
  <delete id="deleteByMomentsId">
    delete from distribution_moments_store
    where moments_id = #{momentsId}
  </delete>

</mapper>
