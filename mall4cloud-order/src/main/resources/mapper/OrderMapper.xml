<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mall4j.cloud.order.mapper.OrderMapper">
    <resultMap id="orderMap" type="com.mall4j.cloud.order.model.Order">
        <id column="order_id" property="orderId"/>
        <result column="order_number" property="orderNumber"/>
        <result column="wechat_order_id" property="wechatOrderId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="shop_id" property="shopId"/>
        <result column="user_id" property="userId"/>
        <result column="order_addr_id" property="orderAddrId"/>
        <result column="shop_name" property="shopName"/>
        <result column="total" property="total"/>
        <result column="actual_total" property="actualTotal"/>
        <result column="order_score" property="orderScore"/>
        <result column="remarks" property="remarks"/>
        <result column="shop_remarks" property="shopRemarks"/>
        <result column="status" property="status"/>
        <result column="pay_type" property="payType"/>
        <result column="delivery_type" property="deliveryType"/>
        <result column="order_type" property="orderType"/>
        <result column="close_type" property="closeType"/>
        <result column="all_count" property="allCount"/>
        <result column="pay_time" property="payTime"/>
        <result column="delivery_time" property="deliveryTime"/>
        <result column="settled_time" property="settledTime"/>
        <result column="finally_time" property="finallyTime"/>
        <result column="cancel_time" property="cancelTime"/>
        <result column="book_time" property="bookTime"/>
        <result column="is_payed" property="isPayed"/>
        <result column="delete_status" property="deleteStatus"/>
        <result column="refund_status" property="refundStatus"/>
        <result column="freight_amount" property="freightAmount"/>
        <result column="score_amount" property="scoreAmount"/>
        <result column="member_amount" property="memberAmount"/>
        <result column="platform_coupon_amount" property="platformCouponAmount"/>
        <result column="shop_coupon_amount" property="shopCouponAmount"/>
        <result column="discount_amount" property="discountAmount"/>
        <result column="platform_amount" property="platformAmount"/>
        <result column="reduce_amount" property="reduceAmount"/>
        <result column="shop_change_free_amount" property="shopChangeFreeAmount"/>
        <result column="platform_free_freight_amount" property="platformFreeFreightAmount"/>
        <result column="free_freight_amount" property="freeFreightAmount"/>
        <result column="platform_free_freight_amount" property="platformFreeFreightAmount"/>
        <result column="order_invoice_id" property="orderInvoiceId"/>
        <result column="tentacle_no" property="tentacleNo"/>
        <result column="distribution_relation" property="distributionRelation"/>
        <result column="distribution_amount" property="distributionAmount"/>
        <result column="distribution_status" property="distributionStatus"/>
        <result column="distribution_user_id" property="distributionUserId"/>
        <result column="distribution_user_type" property="distributionUserType"/>
        <result column="distribution_settle_time" property="distributionSettleTime"/>
        <result column="distribution_withdraw_time" property="distributionWithdrawTime"/>
        <result column="developing_amount" property="developingAmount"/>
        <result column="developing_status" property="developingStatus"/>
        <result column="developing_user_id" property="developingUserId"/>
        <result column="distribution_store_id" property="distributionStoreId"/>
        <result column="developing_store_id" property="developingStoreId"/>
        <result column="developing_settle_time" property="developingSettleTime"/>
        <result column="developing_withdraw_time" property="developingWithdrawTime"/>
        <result column="store_id" property="storeId"/>
        <result column="platform_remarks" property="platformRemarks"/>
        <result column="trace_id" property="traceId"/>
        <result column="order_source" property="orderSource"/>
    </resultMap>

    <resultMap id="orderAndItemMap" type="com.mall4j.cloud.order.model.Order">
        <id column="order_id" property="orderId"/>
        <result column="order_number" property="orderNumber"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="shop_id" property="shopId"/>
        <result column="user_id" property="userId"/>
        <result column="order_addr_id" property="orderAddrId"/>
        <result column="shop_name" property="shopName"/>
        <result column="total" property="total"/>
        <result column="actual_total" property="actualTotal"/>
        <result column="order_score" property="orderScore"/>
        <result column="order_invoice_id" property="orderInvoiceId"/>
        <result column="remarks" property="remarks"/>
        <result column="shop_remarks" property="shopRemarks"/>
        <result column="status" property="status"/>
        <result column="pay_type" property="payType"/>
        <result column="delivery_type" property="deliveryType"/>
        <result column="order_type" property="orderType"/>
        <result column="close_type" property="closeType"/>
        <result column="all_count" property="allCount"/>
        <result column="pay_time" property="payTime"/>
        <result column="delivery_time" property="deliveryTime"/>
        <result column="finally_time" property="finallyTime"/>
        <result column="cancel_time" property="cancelTime"/>
        <result column="book_time" property="bookTime"/>
        <result column="is_payed" property="isPayed"/>
        <result column="delete_status" property="deleteStatus"/>
        <result column="refund_status" property="refundStatus"/>
        <result column="freight_amount" property="freightAmount"/>
        <result column="score_amount" property="scoreAmount"/>
        <result column="member_amount" property="memberAmount"/>
        <result column="platform_coupon_amount" property="platformCouponAmount"/>
        <result column="shop_coupon_amount" property="shopCouponAmount"/>
        <result column="discount_amount" property="discountAmount"/>
        <result column="platform_amount" property="platformAmount"/>
        <result column="reduce_amount" property="reduceAmount"/>
        <result column="shop_change_free_amount" property="shopChangeFreeAmount"/>
        <result column="platform_free_freight_amount" property="platformFreeFreightAmount"/>
        <result column="free_freight_amount" property="freeFreightAmount"/>
        <result column="consignee" property="consignee"/>
        <result column="mobile" property="mobile"/>
        <result column="store_id" property="storeId"/>
        <collection property="orderItems" columnPrefix="oi_" ofType="com.mall4j.cloud.order.model.OrderItem">
            <id column="order_item_id" property="orderItemId"/>
            <result column="shop_id" property="shopId"/>
            <result column="order_id" property="orderId"/>
            <result column="order_number" property="orderNumber"/>
            <result column="category_id" property="categoryId"/>
            <result column="spu_id" property="spuId"/>
            <result column="sku_id" property="skuId"/>
            <result column="user_id" property="userId"/>
            <result column="final_refund_id" property="finalRefundId"/>
            <result column="distribution_user_id" property="distributionUserId"/>
            <result column="count" property="count"/>
            <result column="pic" property="pic"/>
            <result column="is_comm" property="isComm"/>
            <result column="comm_time" property="commTime"/>
            <result column="refund_status" property="refundStatus"/>
            <result column="be_delivered_num" property="beDeliveredNum"/>
            <result column="delivery_type" property="deliveryType"/>
            <result column="shop_cart_time" property="shopCartTime"/>
            <result column="price" property="price"/>
            <result column="spu_total_amount" property="spuTotalAmount"/>
            <result column="actual_total" property="actualTotal"/>
            <result column="share_reduce" property="shareReduce"/>
            <result column="platform_share_reduce" property="platformShareReduce"/>
            <result column="distribution_amount" property="distributionAmount"/>
            <result column="distribution_parent_amount" property="distributionParentAmount"/>
            <result column="score_fee" property="scoreFee"/>
            <result column="use_score" property="useScore"/>
            <result column="gain_score" property="gainScore"/>
            <result column="rate" property="rate"/>
            <result column="platform_commission" property="platformCommission"/>
            <result column="score_amount" property="scoreAmount"/>
            <result column="member_amount" property="memberAmount"/>
            <result column="platform_coupon_amount" property="platformCouponAmount"/>
            <result column="shop_coupon_amount" property="shopCouponAmount"/>
            <result column="discount_amount" property="discountAmount"/>
            <result column="free_freight_amount" property="freeFreightAmount"/>
            <result column="platform_free_freight_amount" property="platformFreeFreightAmount"/>
            <result column="shop_change_free_amount" property="shopChangeFreeAmount"/>
            <result column="create_time" property="createTime"/>
            <result column="update_time" property="updateTime"/>
            <result column="oi_spu_name" property="spuName"/>
            <result column="oi_sku_name" property="skuName"/>
        </collection>
    </resultMap>

    <resultMap type="com.mall4j.cloud.order.model.Order" id="orderAndOrderItem" extends="orderMap">
        <collection property="orderItems" columnPrefix="oi_" ofType="com.mall4j.cloud.order.model.OrderItem">
            <id column="order_item_id" jdbcType="BIGINT" property="orderItemId"/>
            <result column="shop_id" property="shopId"/>
            <result column="order_id" property="orderId"/>
            <result column="spu_id" property="spuId"/>
            <result column="sku_id" property="skuId"/>
            <result column="user_id" property="userId"/>
            <result column="final_refund_id" property="finalRefundId"/>
            <result column="distribution_user_id" property="distributionUserId"/>
            <result column="count" property="count"/>
            <result column="pic" property="pic"/>
            <result column="is_comm" property="isComm"/>
            <result column="refund_status" property="refundStatus"/>
            <result column="be_delivered_num" property="beDeliveredNum"/>
            <result column="delivery_type" property="deliveryType"/>
            <result column="shop_cart_time" property="shopCartTime"/>
            <result column="price" property="price"/>
            <result column="spu_total_amount" property="spuTotalAmount"/>
            <result column="actual_total" property="actualTotal"/>
            <result column="share_reduce" property="shareReduce"/>
            <result column="platform_share_reduce" property="platformShareReduce"/>
            <result column="distribution_amount" property="distributionAmount"/>
            <result column="distribution_parent_amount" property="distributionParentAmount"/>
            <result column="use_score" property="useScore"/>
            <result column="gain_score" property="gainScore"/>
            <result column="shop_change_free_amount" property="shopChangeFreeAmount"/>
            <result column="spu_name" property="spuName" jdbcType="VARCHAR"/>
            <result column="sku_name" property="skuName" jdbcType="VARCHAR"/>
            <!--<collection property="orderItemLangList" ofType="com.mall4j.cloud.order.model.OrderItemLang">-->
            <!--<id column="lang" property="lang" jdbcType="BIGINT"/>-->
            <!--<result column="spu_name" property="spuName" jdbcType="VARCHAR"/>-->
            <!--<result column="sku_name" property="skuName" jdbcType="VARCHAR"/>-->
            <!--</collection>-->
        </collection>
    </resultMap>

    <resultMap type="com.mall4j.cloud.api.order.bo.EsOrderBO" id="esOrderAndOrderItemAndUserAddrMap" extends="orderMap">
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="wechat_order_id" property="wechatOrderId"/>
        <result column="consignee" jdbcType="VARCHAR" property="consignee"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="addr" jdbcType="VARCHAR" property="addr"/>
        <collection property="orderItems" columnPrefix="oi_" ofType="com.mall4j.cloud.api.order.bo.EsOrderItemBO">
            <id column="order_item_id" jdbcType="BIGINT" property="orderItemId"/>
            <result column="shop_id" property="shopId"/>
            <result column="order_id" property="orderId"/>
            <result column="spu_id" property="spuId"/>
            <result column="sku_id" property="skuId"/>
            <result column="user_id" property="userId"/>
            <result column="final_refund_id" property="finalRefundId"/>
            <result column="distribution_user_id" property="distributionUserId"/>
            <result column="count" property="count"/>
            <result column="spu_name" property="spuName"/>
            <result column="sku_name" property="skuName"/>
            <result column="pic" property="pic"/>
            <result column="is_comm" property="isComm"/>
            <result column="refund_status" property="refundStatus"/>
            <result column="be_delivered_num" property="beDeliveredNum"/>
            <result column="delivery_type" property="deliveryType"/>
            <result column="shop_cart_time" property="shopCartTime"/>
            <result column="price" property="price"/>
            <result column="spu_total_amount" property="spuTotalAmount"/>
            <result column="actual_total" property="actualTotal"/>
            <result column="share_reduce" property="shareReduce"/>
            <result column="platform_share_reduce" property="platformShareReduce"/>
            <result column="distribution_amount" property="distributionAmount"/>
            <result column="distribution_parent_amount" property="distributionParentAmount"/>
            <result column="use_score" property="useScore"/>
            <result column="gain_score" property="gainScore"/>
        </collection>
    </resultMap>

    <resultMap id="esDistributionOrderAndOrderItemAndUserAddrMap" type="com.mall4j.cloud.api.order.bo.EsOrderBO" extends="esOrderAndOrderItemAndUserAddrMap">
        <result column="buy_staff_id" property="buyStaffId"/>
    </resultMap>

    <resultMap type="com.mall4j.cloud.api.order.bo.EsOrderBO" id="esJointVentureOrderAndOrderItemAndUserAddrMap" extends="orderMap">
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="area" jdbcType="VARCHAR" property="area"/>
        <result column="addr" jdbcType="VARCHAR" property="addr"/>
        <result column="joint_venture_commission_status" property="jointVentureCommissionStatus"/>
        <result column="joint_venture_refund_status" property="jointVentureRefundStatus"/>
        <collection property="orderItems" columnPrefix="oi_" ofType="com.mall4j.cloud.api.order.bo.EsOrderItemBO">
            <id column="order_item_id" jdbcType="BIGINT" property="orderItemId"/>
            <result column="shop_id" property="shopId"/>
            <result column="order_id" property="orderId"/>
            <result column="spu_id" property="spuId"/>
            <result column="sku_id" property="skuId"/>
            <result column="user_id" property="userId"/>
            <result column="final_refund_id" property="finalRefundId"/>
            <result column="distribution_user_id" property="distributionUserId"/>
            <result column="count" property="count"/>
            <result column="spu_name" property="spuName"/>
            <result column="sku_name" property="skuName"/>
            <result column="pic" property="pic"/>
            <result column="is_comm" property="isComm"/>
            <result column="refund_status" property="refundStatus"/>
            <result column="be_delivered_num" property="beDeliveredNum"/>
            <result column="delivery_type" property="deliveryType"/>
            <result column="shop_cart_time" property="shopCartTime"/>
            <result column="price" property="price"/>
            <result column="spu_total_amount" property="spuTotalAmount"/>
            <result column="actual_total" property="actualTotal"/>
            <result column="share_reduce" property="shareReduce"/>
            <result column="platform_share_reduce" property="platformShareReduce"/>
            <result column="distribution_amount" property="distributionAmount"/>
            <result column="distribution_parent_amount" property="distributionParentAmount"/>
            <result column="use_score" property="useScore"/>
            <result column="gain_score" property="gainScore"/>
            <result column="joint_venture_commission_status" property="jointVentureCommissionStatus"/>
            <result column="joint_venture_refund_status" property="jointVentureRefundStatus"/>
            <result column="return_money_sts" property="returnMoneySts"/>
            <result column="refund_amount" property="refundAmount"/>

        </collection>
    </resultMap>

    <resultMap id="esOrderVO" type="com.mall4j.cloud.common.order.vo.EsOrderVO">
        <id column="order_id" property="orderId"/>
        <result column="order_number" property="orderNumber"/>
        <result column="wechat_order_id" property="wechatOrderId"/>
        <result column="user_id" property="userId"/>
        <result column="actual_total" property="actualTotal"/>
        <result column="order_score" property="orderScore"/>
        <result column="status" property="status"/>
        <result column="order_type" property="orderType"/>
        <result column="refund_status" property="refundStatus"/>
        <result column="delivery_type" property="deliveryType"/>
        <result column="shop_name" property="shopName"/>
        <result column="shop_id" property="shopId"/>
        <result column="freight_amount" property="freightAmount"/>
        <result column="platform_free_freight_amount" property="platformFreeFreightAmount"/>
        <result column="create_time" property="createTime"/>
        <result column="all_count" property="allCount"/>
        <result column="order_invoice_id" property="orderInvoiceId"/>
        <result column="remarks" property="remarks"/>
        <result column="consignee" property="consignee"/>
        <result column="mobile" property="mobile"/>
        <result column="order_addr_id" property="orderAddrId"/>
        <result column="total" property="total"/>
        <result column="shop_remarks" property="shopRemarks"/>
        <result column="pay_type" property="payType"/>
        <result column="close_type" property="closeType"/>
        <result column="pay_time" property="payTime"/>
        <result column="delivery_time" property="deliveryTime"/>
        <result column="finally_time" property="finallyTime"/>
        <result column="cancel_time" property="cancelTime"/>
        <result column="book_time" property="bookTime"/>
        <result column="is_payed" property="isPayed"/>
        <result column="delete_status" property="deleteStatus"/>
        <result column="score_amount" property="scoreAmount"/>
        <result column="member_amount" property="memberAmount"/>
        <result column="platform_coupon_amount" property="platformCouponAmount"/>
        <result column="shop_coupon_amount" property="shopCouponAmount"/>
        <result column="discount_amount" property="discountAmount"/>
        <result column="platform_amount" property="platformAmount"/>
        <result column="reduce_amount" property="reduceAmount"/>
        <result column="platform_remarks" property="platformRemarks"/>
        <result column="order_source" property="orderSource"/>
        <result column="source_Id" property="sourceId"/>
        <result column="store_id" property="storeId"/>
        <result column="trace_id" property="traceId"/>
        <result column="tentacle_no" property="tentacleNo"/>
        <result column="promoter_id" property="promoterId"/>
        <result column="finder_nickname" property="finderNickname"/>
        <result column="sharer_openid" property="sharerOpenid"/>
        <collection property="orderItems" ofType="com.mall4j.cloud.common.order.vo.EsOrderItemVO">
            <id column="order_item_id" property="orderItemId"/>
            <result column="pic" property="pic"/>
            <result column="count" property="count"/>
            <result column="price" property="price"/>
            <result column="use_score" property="useScore"/>
            <result column="sku_id" property="skuId"/>
            <result column="spu_id" property="spuId"/>
            <result column="return_money_sts" property="returnMoneySts"/>
            <result column="shop_id" property="shopId"/>
            <result column="user_id" property="userId"/>
            <result column="final_refund_id" property="finalRefundId"/>
            <result column="distribution_user_id" property="distributionUserId"/>
            <result column="score_fee" property="scoreFee"/>
            <result column="is_comm" property="isComm"/>
            <result column="comm_time" property="commTime"/>
            <result column="item_refund_status" property="refundStatus"/>
            <result column="be_delivered_num" property="beDeliveredNum"/>
            <result column="item_delivery_type" property="deliveryType"/>
            <result column="shop_cart_time" property="shopCartTime"/>
            <result column="spu_total_amount" property="spuTotalAmount"/>
            <result column="item_actual_total" property="actualTotal"/>
            <result column="share_reduce" property="shareReduce"/>
            <result column="platform_share_reduce" property="platformShareReduce"/>
            <result column="spu_name" property="spuName"/>
            <result column="sku_name" property="skuName"/>
            <result column="type" property="type"/>
            <!--<collection property="orderItemLangList" ofType="com.mall4j.cloud.common.order.vo.OrderItemLangVO">-->
            <!--<id column="lang" property="lang"/>-->
            <!--<result column="spu_name" property="spuName"/>-->
            <!--<result column="sku_name" property="skuName"/>-->
            <!--</collection>-->
        </collection>
    </resultMap>
    <resultMap id="jointVentureOrderVO" type="com.mall4j.cloud.common.order.vo.EsOrderVO" extends="esOrderVO">
        <result column="joint_venture_commission_status" property="jointVentureCommissionStatus"/>
        <result column="joint_venture_refund_status" property="jointVentureRefundStatus"/>
    </resultMap>
    <resultMap id="orderExcelVO" type="com.mall4j.cloud.api.order.vo.OrderExcelVO">
        <result column="order_id" property="orderId"/>
        <result column="order_number" property="orderNumber"/>
        <result column="create_time" property="createTime"/>
        <result column="delivery_type" property="deliveryType"/>
        <result column="consignee" property="consignee"/>
        <!--<result column="mobile" property="mobile"/>
        <result column="receiving_addr" property="receivingAddr"/>-->
        <result column="receive_time" property="receivingTime"/>
        <result column="total" property="total"/>
        <result column="freight_amount" property="freightAmount"/>
        <result column="reduce_amount" property="reduceAmount"/>
        <result column="order_score" property="orderScore"/>
        <result column="actual_total" property="actualTotal"/>
        <result column="platform_coupon_amount" property="platformCouponAmount"/>
        <result column="shop_coupon_amount" property="shopCouponAmount"/>
        <result column="pay_type" property="payType"/>
        <result column="status" property="status"/>
        <result column="refund_status" property="refundStatus"/>
        <result column="spu_name" property="spuName"/>
        <result column="sku_id" property="skuId"/>
        <result column="sku_name" property="skuName"/>
        <result column="price" property="price"/>
        <result column="count" property="count"/>
        <result column="spu_total_amount" property="spuTotalAmount"/>
        <result column="share_reduce" property="shareReduce"/>
        <result column="actual_total_item" property="actualTotalItem"/>
        <result column="use_score" property="useScore"/>
        <result column="refund_status_item" property="refundStatusItem"/>
        <result column="finally_time" property="finallyTime"/>
        <result column="user_id" property="userId"/>
        <result column="store_id" property="storeId"/>
        <result column="distribution_user_type" property="distributionUserType"/>
        <result column="distribution_user_id" property="distributionUserId"/>
        <result column="order_source" property="orderSource"/>
        <result column="source_id" property="sourceId"/>
        <result column="totalRefundAmount" property="totalRefundAmount"/>
        <result column="spu_id" property="spuId"/>
        <result column="order_type" property="orderType"/>
        <result column="pay_time" property="payTime"/>
        <result column="buy_staff_id" property="buyStaffId"/>
        <result column="order_source" property="orderSource"/>
        <result column="promoter_id" property="promoterId"/>
        <result column="finder_nickname" property="finderNickname"/>
        <result column="sharer_openid" property="sharerOpenid"/>
        <result column="wechat_order_id" property="wechatOrderId"/>
        <result column="remarks" property="remarks"/>
        <result column="platform_remarks" property="platformRemarks"/>
        <collection property="orderItemLangList" ofType="com.mall4j.cloud.common.order.vo.OrderItemLangVO">
            <id column="lang" property="lang"/>
            <result column="spu_name" property="spuName"/>
            <result column="sku_name" property="skuName"/>
        </collection>
    </resultMap>
    <resultMap id="unDeliveryOrderExcelVO" type="com.mall4j.cloud.order.vo.UnDeliveryOrderExcelVO">
        <result column="order_id" property="orderId"/>
        <result column="delivery_type" property="deliveryType"/>
        <result column="consignee" property="consignee"/>
        <result column="mobile" property="mobile"/>
        <result column="receiving_addr" property="receivingAddr"/>
        <result column="spu_name" property="spuName"/>
        <result column="sku_name" property="skuName"/>
        <result column="be_delivered_num" property="count"/>
    </resultMap>

    <resultMap id="distributionOrderVO" type="com.mall4j.cloud.order.vo.DistributionOrderVO">
        <result column="order_id" property="orderId"/>
        <result column="order_number" property="orderNumber"/>
        <result column="create_time" property="createTime"/>
        <result column="total" property="total"/>
        <result column="actual_total" property="actualTotal"/>
        <result column="distribution_status" property="distributionStatus"/>
        <result column="distribution_amount" property="distributionAmount"/>
        <result column="developing_amount" property="developingAmount"/>
        <result column="distribution_user_type" property="distributionUserType"/>
        <collection property="orderItems" columnPrefix="oi_" ofType="com.mall4j.cloud.order.vo.DistributionOrderItemVO">
            <id column="order_item_id" property="orderItemId"/>
            <result column="pic" property="pic"/>
            <result column="spu_id" property="spuId"/>
            <result column="spu_name" property="spuName"/>
            <result column="sku_id" property="skuId"/>
            <result column="sku_name" property="skuName"/>
            <result column="price" property="price"/>
            <result column="count" property="count"/>
            <result column="actual_total" property="actualTotal"/>
            <result column="spu_total_amount" property="spuTotalAmount"/>
            <result column="refund_status" property="refundStatus"/>
            <result column="distribution_amount" property="distributionAmount"/>
            <result column="distribution_parent_amount" property="distributionParentAmount"/>
            <result column="distribution_amoumt_snapshot" property="distributionAmountSnapshot"/>
            <result column="distribution_parent_amount_snapshot" property="distributionParentAmountSnapshot"/>
        </collection>
    </resultMap>

    <sql id="Vo_Column_List">
        `order_id`,
        `order_number`,
        `wechat_order_id`,
        `create_time`,
        `update_time`,
        `shop_id`,
        `user_id`,
        `order_addr_id`,
        `shop_name`,
        `total`,
        `actual_total`,
        order_score,
        `remarks`,
        `shop_remarks`,
        `status`,
        `pay_type`,
        `delivery_type`,
        `order_type`,
        `close_type`,
        `all_count`,
        `pay_time`,
        `delivery_time`,
        `finally_time`,
        `settled_time`,
        `cancel_time`,
        `book_time`,
        `is_payed`,
        `delete_status`,
        `refund_status`,
        `freight_amount`,
        `score_amount`,
        `member_amount`,
        `platform_coupon_amount`,
        `platform_commission`,
        `distribution_amount`,
        `shop_coupon_amount`,
        `discount_amount`,
        `platform_amount`,
        `reduce_amount`,
        `platform_free_freight_amount`,
        `free_freight_amount`,
        `tentacle_no`,
        `distribution_relation`,
        `distribution_amount`,
        `distribution_status`,
        `distribution_user_id`,
        `distribution_user_type`,
        `developing_amount`,
        `developing_status`,
        `developing_user_id`,
        `distribution_store_id`,
        `developing_store_id`,
        `store_id`,
        `order_source`,
        `joint_venture_commission_status`,
        `joint_venture_refund_status`,
        `buy_staff_id`
    </sql>
    <select id="list" resultMap="esOrderVO">
        SELECT data.*,oi.order_item_id,oi.sku_id,oi.user_id,oi.count,oi.spu_name,oi.sku_name,oi.pic,
        oi.is_comm,oi.spu_id,oi.be_delivered_num,oi.actual_total AS item_actual_total,oi.share_reduce,
        oi.delivery_type as item_delivery_type, oi.platform_share_reduce,oi.price,oi.shop_cart_time,oi.spu_total_amount,
        oi.refund_status AS item_refund_status,oi.score_fee,oi.type
        FROM
        (
        SELECT o.order_id,o.order_number,o.wechat_order_id,o.actual_total,o.order_score,o.status,order_type,o.refund_status,o.delivery_type,o.shop_name,
        o.shop_id,o.order_addr_id,o.freight_amount,o.create_time,o.all_count,o.total,o.score_amount,o.platform_amount,o.tentacle_no,
        o.platform_free_freight_amount,o.reduce_amount,o.pay_type,oa.consignee,oa.mobile,oiv.order_invoice_id,
        o.remarks,o.platform_remarks,o.order_source,o.source_Id,o.store_id,o.trace_id,o.promoter_id,
        o.finder_nickname,o.sharer_openid
        FROM
        `order` o
        LEFT JOIN order_addr oa ON oa.order_addr_id = o.order_addr_id
        LEFT JOIN order_invoice oiv ON oiv.order_id = o.order_id
        where 1=1
        <if test="order.shopId != null">
            and o.shop_id = #{order.shopId}
        </if>
        <if test="order.wechatOrderId != null">
            and o.wechat_order_id = #{order.wechatOrderId}
        </if>
        <if test="order.storeId != null">
            and o.store_id = #{order.storeId}
        </if>
        <if test="order.storeIdList != null">
            and o.store_id in
            <foreach collection="order.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="order.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{order.jointVentureCommissionStatus}
        </if>
        <if test="order.buyStaffId != null">
            and o.buy_staff_id = #{order.buyStaffId}
        </if>
        <if test="order.shopName != null">
            AND o.shop_name LIKE CONCAT('%',#{order.shopName},'%')
        </if>
        <if test="order.userId != null">
            and o.user_id = #{order.userId}
        </if>
        <if test="order.orderId != null">
                and o.order_id = #{order.orderId}
            </if>
            <if test="order.orderNumber != null and order.orderNumber!=''">
                and o.order_number = #{order.orderNumber}
            </if>
            <if test="order.orderType != null">
                and o.order_type = #{order.orderType}
            </if>
            <!-- 商品类型为空，且用户id为空 -> 商家、平台端获取的非积分订单列表-->
            <if test="order.orderType == null and order.userId == null">
                AND order_type BETWEEN 0 AND 6
            </if>
            <if test="order.payType == 0">
                and o.pay_type = 0
            </if>
            <if test="order.payType == 1">
                and o.pay_type IN (1,3,4,5,8)
            </if>
            <if test="order.payType == 2">
                and o.pay_type IN (2,6,7)
            </if>
            <if test="order.payType == 3">
                and o.pay_type IN (9)
            </if>
            <if test="order.payType == 10">
                and o.pay_type IN (10)
            </if>
            <if test="order.status != null and order.status != 0">
                and o.status = #{order.status}
            </if>
            <if test="order.statusList != null and order.statusList.size() > 0">
                and o.status in
                <foreach collection="order.statusList" item="status" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="order.deleteStatus != null">
                AND delete_status = #{order.deleteStatus}
            </if>
            <if test="order.deliveryType != null">
                and o.delivery_type = #{order.deliveryType}
            </if>
            <if test="order.refundStatus != null">
                <if test="order.refundStatus != 0 ">
                    and o.refund_status = #{order.refundStatus}
                </if>
                <if test="order.refundStatus == 0 ">
                    and o.refund_status IS NULL
                </if>
            </if>
            <if test="order.isPayed != null">
                and o.is_payed = #{order.isPayed}
            </if>
            <if test="order.isComm != null">
                and o.`status` = 5
            </if>
            <if test="order.isComm != null or (order.spuName != null and order.spuName != '')">
                and (o.order_id in
                        (SELECT DISTINCT oi.order_id
                        FROM order_item oi
                        <where>
                            <if test="order.isComm != null">
                                (refund_status IS NULL OR refund_status = 4)
                                AND oi.is_comm = #{order.isComm}
                            </if>
                            <if test="order.spuName != null and order.spuName != ''">
                                AND oi.spu_name LIKE CONCAT('%',#{order.spuName} '%')
                            </if>
                        </where>

                        )
                    <if test="order.spuName != null and order.spuName != ''">
                        or o.order_number LIKE CONCAT('%',#{order.spuName} '%')
                    </if>
                    )
            </if>
            <if test="order.keyWord != null and order.keyWord != ''">
                and o.order_id in
                (SELECT DISTINCT oi.order_id
                FROM order_item oi
                where
                oi.spu_name LIKE CONCAT('%',#{order.keyWord} '%')
                or
                oi.order_number = #{order.keyWord}
                )
            </if>
            <if test="order.startTime != null">
                and o.create_time &gt;= #{order.startTime}
            </if>
            <if test="order.endTime != null">
                and o.create_time &lt;= #{order.endTime}
            </if>
            <if test="order.payStartTime != null">
                AND o.pay_time &gt;= #{order.payStartTime}
            </if>
            <if test="order.payEndTime != null">
                AND o.pay_time &lt;= #{order.payEndTime}
            </if>
            <if test="order.consignee != null and order.consignee != ''">
                and oa.consignee LIKE CONCAT('%',#{order.consignee} '%')
            </if>
            <if test="order.mobile != null and order.mobile != ''">
                and oa.mobile = #{order.mobile}
            </if>
            <if test="order.sourceId != null and order.sourceId != ''">
                and o.source_Id = #{order.sourceId}
            </if>
        <if test="order.orderSource != null">
            and o.order_source = #{order.orderSource}
        </if>
        ORDER BY o.create_time DESC
        LIMIT #{pageAdapter.begin}, #{pageAdapter.size}
        ) data
        LEFT JOIN order_item oi ON data.order_id = oi.order_id
    </select>
    <select id="newListCount" resultType="java.lang.Long">
        SELECT count(1)
        FROM
        (
        SELECT o.order_id,o.order_number,o.actual_total,o.order_score,o.status,order_type,o.refund_status,o.delivery_type,o.shop_name,
        o.shop_id,o.order_addr_id,o.freight_amount,o.create_time,o.all_count,o.total,o.score_amount,o.platform_amount,o.tentacle_no,
        o.platform_free_freight_amount,o.reduce_amount,o.pay_type,oa.consignee,oa.mobile,oiv.order_invoice_id,
        o.remarks,o.platform_remarks,o.order_source,o.source_Id,o.store_id,o.trace_id
        FROM
        `order` o
        LEFT JOIN order_addr oa ON oa.order_addr_id = o.order_addr_id
        LEFT JOIN order_invoice oiv ON oiv.order_id = o.order_id
        where 1=1
        <if test="order.shopId != null">
            and o.shop_id = #{order.shopId}
        </if>
        <if test="order.wechatOrderId != null">
            and o.wechat_order_id = #{order.wechatOrderId}
        </if>
        <if test="order.storeId != null">
            and o.store_id = #{order.storeId}
        </if>
        <if test="order.storeIdList != null">
            and o.store_id in
            <foreach collection="order.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="order.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{order.jointVentureCommissionStatus}
        </if>
        <if test="order.buyStaffId != null">
            and o.buy_staff_id = #{order.buyStaffId}
        </if>
        <if test="order.shopName != null">
            AND o.shop_name LIKE CONCAT('%',#{order.shopName},'%')
        </if>
        <if test="order.userId != null">
            and o.user_id = #{order.userId}
        </if>
        <if test="order.orderId != null">
            and o.order_id = #{order.orderId}
        </if>
        <if test="order.orderNumber != null and order.orderNumber!=''">
            and o.order_number = #{order.orderNumber}
        </if>
        <if test="order.orderType != null">
            and o.order_type = #{order.orderType}
        </if>
        <!-- 商品类型为空，且用户id为空 -> 商家、平台端获取的非积分订单列表-->
        <if test="order.orderType == null and order.userId == null">
            AND order_type BETWEEN 0 AND 6
        </if>
        <if test="order.payType == 0">
            and o.pay_type = 0
        </if>
        <if test="order.payType == 1">
            and o.pay_type IN (1,3,4,5,8)
        </if>
        <if test="order.payType == 2">
            and o.pay_type IN (2,6,7)
        </if>
        <if test="order.payType == 3">
            and o.pay_type IN (9)
        </if>
        <if test="order.payType == 10">
            and o.pay_type IN (10)
        </if>
        <if test="order.status != null and order.status != 0">
            and o.status = #{order.status}
        </if>
        <if test="order.statusList != null and order.statusList.size() > 0">
            and o.status in
            <foreach collection="order.statusList" item="status" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        <if test="order.deleteStatus != null">
            AND delete_status = #{order.deleteStatus}
        </if>
        <if test="order.deliveryType != null">
            and o.delivery_type = #{order.deliveryType}
        </if>
        <if test="order.refundStatus != null">
            <if test="order.refundStatus != 0 ">
                and o.refund_status = #{order.refundStatus}
            </if>
            <if test="order.refundStatus == 0 ">
                and o.refund_status IS NULL
            </if>
        </if>
        <if test="order.isPayed != null">
            and o.is_payed = #{order.isPayed}
        </if>
        <if test="order.isComm != null">
            and o.`status` = 5
        </if>
        <if test="order.isComm != null or (order.spuName != null and order.spuName != '')">
            and o.order_id in
            (SELECT DISTINCT oi.order_id
            FROM order_item oi
            <where>
                <if test="order.isComm != null">
                    (refund_status IS NULL OR refund_status = 4)
                    AND oi.is_comm = #{order.isComm}
                </if>
                <if test="order.spuName != null and order.spuName != ''">
                    AND oi.spu_name LIKE CONCAT('%',#{order.spuName} '%')
                </if>
            </where>

            )
        </if>
        <if test="order.keyWord != null and order.keyWord != ''">
            and o.order_id in
            (SELECT DISTINCT oi.order_id
            FROM order_item oi
            where
                oi.spu_name LIKE CONCAT('%',#{order.keyWord} '%')
                or
                oi.order_number = #{order.keyWord}
            )
        </if>
        <if test="order.startTime != null">
            and o.create_time &gt;= #{order.startTime}
        </if>
        <if test="order.endTime != null">
            and o.create_time &lt;= #{order.endTime}
        </if>
        <if test="order.payStartTime != null">
            AND o.pay_time &gt;= #{order.payStartTime}
        </if>
        <if test="order.payEndTime != null">
            AND o.pay_time &lt;= #{order.payEndTime}
        </if>
        <if test="order.consignee != null and order.consignee != ''">
            and oa.consignee LIKE CONCAT('%',#{order.consignee} '%')
        </if>
        <if test="order.mobile != null and order.mobile != ''">
            and oa.mobile = #{order.mobile}
        </if>
        <if test="order.sourceId != null and order.sourceId != ''">
            and o.source_Id = #{order.sourceId}
        </if>
        <if test="order.orderSource != null">
            and o.order_source = #{order.orderSource}
        </if>
        ORDER BY o.create_time DESC
        ) temp
        <!--LEFT JOIN order_item oi ON data.order_id = oi.order_id-->
    </select>
    <select id="countDistributionJointVentureOrderPreApplyInfo"
            resultType="com.mall4j.cloud.order.vo.DistributionJointVentureOrderPreApplyInfoVO">
        SELECT
            sum(oi.actual_total) totalOrderTurnover,
            sum(
            IF
            ( orf.refund_id IS NULL AND oi.joint_venture_refund_status = 0 AND oi.joint_venture_commission_status = 0 AND o.STATUS = 5,
            oi.actual_total,
            IF(orf.refund_count is null,0,if(oi.count=orf.refund_count,0,oi.actual_total - IFNULL(orf.refund_amount,0))))
            ) AS orderTurnover,
            sum(
            IF
            ( orf.refund_id IS NOT NULL AND oi.joint_venture_refund_status = 1 AND oi.joint_venture_commission_status = 2, orf.refund_amount, 0 )) AS dividedOrderTurnover
        FROM
        `order` o
        LEFT JOIN order_item oi ON oi.order_id = o.order_id
        LEFT JOIN order_refund orf ON orf.refund_id = oi.final_refund_id AND orf.return_money_sts = 5
        WHERE
            o.STATUS IN (5, 6)
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                order_item ioi
                INNER JOIN order_refund iorf ON iorf.refund_id = ioi.final_refund_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                AND ioi.order_item_id = oi.order_item_id
            )
            AND NOT EXISTS (
                SELECT
                1
                FROM
                `order` oo
                INNER JOIN order_refund iorf ON iorf.order_id = oo.order_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                and iorf.refund_type = 1
                AND oo.order_id = o.order_id
            )
        <if test="order.storeIdList != null">
            and o.store_id in
            <foreach collection="order.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="order.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{order.jointVentureCommissionStatus}
        </if>
        <if test="order.payStartTime != null">
            AND o.pay_time &gt;= #{order.payStartTime}
        </if>
        <if test="order.payEndTime != null">
            AND o.pay_time &lt;= #{order.payEndTime}
        </if>
    </select>
    <select id="listCount" resultType="java.lang.Long">
        SELECT count(1)
        FROM
        `order` o
        LEFT JOIN order_addr oa ON oa.order_addr_id = o.order_addr_id
        where 1=1
        <if test="order.shopId != null">
            and o.shop_id = #{order.shopId}
        </if>
        <if test="order.storeId != null">
            and o.store_id = #{order.storeId}
        </if>
        <if test="order.storeIdList != null">
            and o.store_id in
            <foreach collection="order.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="order.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{order.jointVentureCommissionStatus}
        </if>
        <if test="order.buyStaffId != null">
            and o.buy_staff_id = #{order.buyStaffId}
        </if>
        <if test="order.shopName != null">
            AND o.shop_name LIKE CONCAT('%',#{order.shopName},'%')
        </if>
        <if test="order.userId != null">
            and o.user_id = #{order.userId}
        </if>
            <if test="order.orderId != null">
                and o.order_id = #{order.orderId}
            </if>
            <if test="order.orderNumber != null and order.orderNumber!=''">
                and o.order_number = #{order.orderNumber}
            </if>
            <if test="order.orderType != null">
                and o.order_type = #{order.orderType}
            </if>
            <!-- 商品类型为空，且用户id为空 -> 商家、平台端获取的非积分订单列表-->
            <if test="order.orderType == null and order.userId == null">
                AND order_type BETWEEN 0 AND 6
            </if>
            <if test="order.payType == 0">
                and o.pay_type = 0
            </if>
            <if test="order.payType == 1">
                and o.pay_type IN (1,3,4,5,8)
            </if>
            <if test="order.payType == 2">
                and o.pay_type IN (2,6,7)
            </if>
            <if test="order.payType == 3">
                and o.pay_type IN (9)
            </if>
            <if test="order.status != null and order.status != 0">
                and o.status = #{order.status}
            </if>
            <if test="order.deleteStatus != null">
                AND delete_status = #{order.deleteStatus}
            </if>
            <if test="order.deliveryType != null">
                and o.delivery_type = #{order.deliveryType}
            </if>
            <if test="order.refundStatus != null">
                <if test="order.refundStatus != 0 ">
                    and o.refund_status = #{order.refundStatus}
                </if>
                <if test="order.refundStatus == 0 ">
                    and o.refund_status IS NULL
                </if>
            </if>
            <if test="order.isPayed != null">
                and o.is_payed = #{order.isPayed}
            </if>
            <if test="order.isComm != null">
                and o.`status` = 5
            </if>
            <if test="order.isComm != null or (order.spuName != null and order.spuName != '')">
                and o.order_id in
                (SELECT DISTINCT oi.order_id
                FROM order_item oi
                <where>
                    <if test="order.isComm != null">
                        (refund_status IS NULL OR refund_status = 4)
                        AND oi.is_comm = #{order.isComm}
                    </if>
                    <if test="order.spuName != null and order.spuName != ''">
                        AND oi.spu_name LIKE CONCAT('%',#{order.spuName} '%')
                    </if>
                </where>

                )
            </if>
            <if test="order.startTime != null">
                and o.create_time &gt;= #{order.startTime}
            </if>
            <if test="order.endTime != null">
                and o.create_time &lt;= #{order.endTime}
            </if>
            <if test="order.payStartTime != null">
                AND o.pay_time &gt;= #{order.payStartTime}
            </if>
            <if test="order.payEndTime != null">
                AND o.pay_time &lt;= #{order.payEndTime}
            </if>
            <if test="order.consignee != null and order.consignee != ''">
                and oa.consignee LIKE CONCAT('%',#{order.consignee} '%')
            </if>
            <if test="order.mobile != null and order.mobile != ''">
                and oa.mobile = #{order.mobile}
            </if>
            <if test="order.sourceId != null and order.sourceId != ''">
                and o.source_Id = #{order.sourceId}
            </if>
            <if test="order.orderSource != null">
                and o.order_source = #{order.orderSource}
            </if>
    </select>
    <select id="countOrderList" resultType="com.mall4j.cloud.order.vo.OrderListCountVO">
        SELECT COUNT(*) all_count,SUM(IF(o.create_time &gt;= #{startTime},1,0)) AS count
        FROM
        (SELECT order_id,order_addr_id,create_time FROM `order`
        <where>
            <if test="order.shopId != null">
                shop_id = #{order.shopId}
            </if>
            <if test="order.shopName != null and order.shopName !=''">
                AND shop_name LIKE CONCAT('%',#{order.shopName},'%')
            </if>
            <if test="order.userId != null">
                AND user_id = #{order.userId}
            </if>
            <if test="order.orderId != null">
                AND order_id = #{order.orderId}
            </if>
            <if test="order.orderType != null">
                AND order_type = #{order.orderType}
            </if>
            <!-- 商品类型为空，且用户id为空 -> 商家、平台端获取的非积分订单列表-->
            <if test="order.orderType == null and order.userId == null">
                AND order_type BETWEEN 0 AND 6
            </if>
            <if test="order.payType == 0">
                AND pay_type = 0
            </if>
            <if test="order.payType == 1">
                AND pay_type IN (1,3,4,5,8)
            </if>
            <if test="order.payType == 2">
                AND pay_type IN (2,6,7)
            </if>
            <if test="order.payType == 3">
                AND pay_type IN (9)
            </if>
            <if test="order.status != null and order.status != 0">
                AND status = #{order.status}
            </if>
            <if test="order.deleteStatus != null">
                AND delete_status = #{order.deleteStatus}
            </if>
            <if test="order.deliveryType != null">
                AND delivery_type = #{order.deliveryType}
            </if>
            <if test="order.refundStatus != null">
                <if test="order.refundStatus != 0 ">
                    AND refund_status = #{order.refundStatus}
                </if>
                <if test="order.refundStatus == 0 ">
                    AND refund_status IS NULL
                </if>
                <!--                AND refund_status = #{order.refundStatus}-->
            </if>
            <if test="order.isPayed != null">
                AND is_payed = #{order.isPayed}
            </if>
            <if test="order.isComm != null">
                AND status = 5
            </if>
            <if test="order.isComm != null or (order.spuName != null and order.spuName != '')">
                AND order_id IN
                (SELECT DISTINCT oi.order_id
                FROM order_item oi
                LEFT JOIN order_item_lang oil ON oi.order_item_id = oil.order_item_id
                <where>
                    <if test="order.isComm != null">
                        (refund_status IS NULL OR refund_status = 4)
                        AND oi.is_comm = #{order.isComm}
                    </if>
                    <if test="order.spuName != null and order.spuName != ''">
                        AND oil.spu_name LIKE CONCAT('%',#{order.spuName} '%')
                    </if>
                </where>
                )
            </if>
            <if test="order.startTime != null">
                AND create_time &gt;= #{order.startTime}
            </if>
            <if test="order.endTime != null">
                AND create_time &lt;= #{order.endTime}
            </if>
            <if test="order.payStartTime != null">
                AND pay_time &gt;= #{order.payStartTime}
            </if>
            <if test="order.payEndTime != null">
                AND pay_time &lt;= #{order.payEndTime}
            </if>
        </where>
        ) o
        LEFT JOIN order_addr oa ON oa.order_addr_id = o.order_addr_id
        <where>
            <if test="order.consignee != null and order.consignee != ''">
                oa.consignee LIKE CONCAT('%',#{order.consignee} '%')
            </if>
            <if test="order.mobile != null and order.mobile != ''">
                AND oa.mobile = #{order.mobile}
            </if>
        </where>
    </select>
    <select id="getByOrderId" resultType="com.mall4j.cloud.order.model.Order">
        select
        <include refid="Vo_Column_List"/>
        from `order`
        where order_id = #{orderId}
    </select>
    <select id="getByOrderNumber" resultType="com.mall4j.cloud.order.model.Order">
        select
        <include refid="Vo_Column_List"/>
        from `order`
        where order_number = #{orderNumber}
    </select>
    <update id="update">
        update `order`
        <set>
            <if test="order.shopId != null">
                `shop_id` = #{order.shopId},
            </if>
            <if test="order.shopName != null">
                `shop_name` = #{order.shopName},
            </if>
            <if test="order.userId != null">
                `user_id` = #{order.userId},
            </if>
            <if test="order.orderAddrId != null">
                `order_addr_id` = #{order.orderAddrId},
            </if>
            <if test="order.total != null">
                `total` = #{order.total},
            </if>
            <if test="order.actualTotal != null">
                `actual_total` = #{order.actualTotal},
            </if>
            <if test="order.remarks != null">
                `remarks` = #{order.remarks},
            </if>
            <if test="order.shopRemarks != null">
                `shop_remarks` = #{order.shopRemarks},
            </if>
            <if test="order.status != null">
                `status` = #{order.status},
            </if>
            <if test="order.payType != null">
                `pay_type` = #{order.payType},
            </if>
            <if test="order.deliveryType != null">
                `delivery_type` = #{order.deliveryType},
            </if>
            <if test="order.orderType != null">
                `order_type` = #{order.orderType},
            </if>
            <if test="order.closeType != null">
                `close_type` = #{order.closeType},
            </if>
            <if test="order.allCount != null">
                `all_count` = #{order.allCount},
            </if>
            <if test="order.payTime != null">
                `pay_time` = #{order.payTime},
            </if>
            <if test="order.deliveryTime != null">
                `delivery_time` = #{order.deliveryTime},
            </if>
            <if test="order.finallyTime != null">
                `finally_time` = #{order.finallyTime},
            </if>
            <if test="order.cancelTime != null">
                `cancel_time` = #{order.cancelTime},
            </if>
            <if test="order.bookTime != null">
                `book_time` = #{order.bookTime},
            </if>
            <if test="order.isPayed != null">
                `is_payed` = #{order.isPayed},
            </if>
            <if test="order.deleteStatus != null">
                `delete_status` = #{order.deleteStatus},
            </if>
            <if test="order.refundStatus != null">
                `refund_status` = #{order.refundStatus},
            </if>
            <if test="order.freightAmount != null">
                `freight_amount` = #{order.freightAmount},
            </if>
            <if test="order.scoreAmount != null">
                `score_amount` = #{order.scoreAmount},
            </if>
            <if test="order.memberAmount != null">
                `member_amount` = #{order.memberAmount},
            </if>
            <if test="order.platformCouponAmount != null">
                `platform_coupon_amount` = #{order.platformCouponAmount},
            </if>
            <if test="order.shopCouponAmount != null">
                `shop_coupon_amount` = #{order.shopCouponAmount},
            </if>
            <if test="order.discountAmount != null">
                `discount_amount` = #{order.discountAmount},
            </if>
            <if test="order.platformAmount != null">
                `platform_amount` = #{order.platformAmount},
            </if>
            <if test="order.reduceAmount != null">
                `reduce_amount` = #{order.reduceAmount},
            </if>
            <if test="order.shopChangeFreeAmount != null">
                `shop_change_free_amount` = #{order.shopChangeFreeAmount},
            </if>
            <if test="order.freeFreightAmount != null">
                `free_freight_amount` = #{order.freeFreightAmount},
            </if>
            <if test="order.platformCommission != null">
                `platform_commission` = #{order.platformCommission},
            </if>
            <if test="order.jointVentureCommissionStatus != null">
                `joint_venture_commission_status` = #{order.jointVentureCommissionStatus},
            </if>
            <if test="order.jointVentureRefundStatus != null">
                `joint_venture_refund_status` = #{order.jointVentureRefundStatus},
            </if>
        </set>
        where order_id = #{order.orderId}
    </update>
    <update id="updateDistributioninfo">
        update `order`
        <set>
            <if test="order.tentacleNo != null">
                `tentacle_no` = #{order.tentacleNo},
            </if>
            <if test="order.distributionRelation != null">
                `distribution_relation` = #{order.distributionRelation},
            </if>
            <if test="order.distributionAmount != null">
                `distribution_amount` = #{order.distributionAmount},
            </if>
            <if test="order.distributionStatus != null">
                `distribution_status` = #{order.distributionStatus},
            </if>
            <if test="order.distributionUserType != null">
                `distribution_user_type` = #{order.distributionUserType},
            </if>
            <if test="order.distributionUserId != null">
                `distribution_user_id` = #{order.distributionUserId},
            </if>
            <if test="order.distributionStoreId != null">
                `distribution_store_id` = #{order.distributionStoreId},
            </if>
            <if test="order.distributionSettleTime != null">
                `distribution_settle_time` = #{order.distributionSettleTime},
            </if>
            <if test="order.distributionWithdrawTime != null">
                `distribution_withdraw_time` = #{order.distributionWithdrawTime},
            </if>
            <if test="order.developingAmount != null">
                `developing_amount` = #{order.developingAmount},
            </if>
            <if test="order.developingStatus != null">
                `developing_status` = #{order.developingStatus},
            </if>
            <if test="order.developingUserId != null">
                `developing_user_id` = #{order.developingUserId},
            </if>
            <if test="order.developingStoreId != null">
                `developing_store_id` = #{order.developingStoreId},
            </if>
            <if test="order.developingSettleTime != null">
                `developing_settle_time` = #{order.developingSettleTime},
            </if>
            <if test="order.developingWithdrawTime != null">
                `developing_withdraw_time` = #{order.developingWithdrawTime},
            </if>
        </set>
        where order_id = #{order.orderId}
    </update>
    <delete id="deleteById">
        delete
        from `order`
        where order_id = #{orderId}
    </delete>
    <insert id="saveBatch">
        insert into `order` (`order_id`,`order_number`, `shop_id`,`shop_name`, `user_id`, `buy_staff_id`, `order_addr_id`, `total`,
        `actual_total`,
        `remarks`,
        `shop_remarks`, `status`, `pay_type`, `delivery_type`, `order_type`, `close_type`,
        `all_count`, `pay_time`, `delivery_time`, `finally_time`, `cancel_time`, `book_time`,
        `is_payed`, `delete_status`, `refund_status`, `freight_amount`, `order_score`,
        `score_amount`,`tentacle_no`,`distribution_relation`,`distribution_store_id`,`developing_store_id`,
        `distribution_amount`,`distribution_status`,`distribution_user_id`,`distribution_user_type`,`developing_amount`,`developing_status`,`developing_user_id`,
        `member_amount`, `platform_coupon_amount`, `shop_coupon_amount`, `discount_amount`,
        `platform_amount`, `reduce_amount`,`free_freight_amount`,
        platform_free_freight_amount,`shop_change_free_amount`, `platform_commission`, `is_settled`,`store_id`,`order_source`,`source_id`,`trace_id`,`wechat_order_id`)
        values
        <foreach collection="orders" item="order" separator=",">
            (#{order.orderId},#{order.orderNumber}, #{order.shopId},#{order.shopName}, #{order.userId}, #{order.buyStaffId},
            #{order.orderAddrId}, #{order.total},
            #{order.actualTotal}, #{order.remarks}, #{order.shopRemarks}, #{order.status},
            #{order.payType}, #{order.deliveryType}, #{order.orderType}, #{order.closeType},
            #{order.allCount}, #{order.payTime}, #{order.deliveryTime}, #{order.finallyTime},
            #{order.cancelTime}, #{order.bookTime}, #{order.isPayed}, #{order.deleteStatus},
            #{order.refundStatus}, #{order.freightAmount}, #{order.orderScore},
            #{order.scoreAmount},#{order.tentacleNo},#{order.distributionRelation},#{order.distributionStoreId},#{order.developingStoreId},
            #{order.distributionAmount}, #{order.distributionStatus}, #{order.distributionUserId},
            #{order.distributionUserType}, #{order.developingAmount}, #{order.developingStatus},
            #{order.developingUserId}, #{order.memberAmount},
            #{order.platformCouponAmount}, #{order.shopCouponAmount}, #{order.discountAmount},
            #{order.platformAmount}, #{order.reduceAmount}, #{order.freeFreightAmount},
            #{order.platformFreeFreightAmount}, #{order.shopChangeFreeAmount}, #{order.platformCommission},
            #{order.isSettled},#{order.storeId},#{order.orderSource},#{order.sourceId},#{order.traceId},#{order.wechatOrderId})
        </foreach>
    </insert>
    <select id="getOrdersStatus" resultType="com.mall4j.cloud.api.order.bo.OrderStatusBO">
        select `status`, `order_id`, `order_type`,user_id,is_payed,create_time
        from `order` where order_id in
        <foreach collection="orderIds" open="(" item="orderId" close=")" separator=",">
            #{orderId}
        </foreach>
    </select>
    <select id="getOrdersActualAmount" resultType="com.mall4j.cloud.api.order.vo.OrderAmountVO">
        SELECT SUM(actual_total) AS payAmount,
        ( SELECT SUM(`use_score`) AS payScore FROM order_item
        WHERE order_id IN
        <foreach collection="orderIds" open="(" item="orderId" close=")" separator=",">
            #{orderId}
        </foreach>
        ) AS payScore
        FROM `order`
        WHERE order_id in
        <foreach collection="orderIds" open="(" item="orderId" close=")" separator=",">
            #{orderId}
        </foreach>
    </select>
    <select id="isPay" resultType="java.lang.Integer">
        select count(*)
        from `order` where order_id = #{orderId}
        and is_payed = 1
        <if test="userId != null">
            and user_id = #{userId}
        </if>
    </select>

    <update id="updateByToPaySuccess">
        update `order` set `status` = 2,is_payed =1,update_time=NOW(),pay_time=NOW(),pay_type =#{payType} where
        order_id in
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </update>

    <update id="updateByToGroupPaySuccess">
        update `order` set `status` = 7,is_payed =1,update_time=NOW(),pay_time=NOW(),pay_type =#{payType} where
        order_id in
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </update>

    <select id="getOrdersSimpleAmountInfo" resultType="com.mall4j.cloud.api.order.bo.OrderSimpleAmountInfoBO">
        select `shop_id`, `order_id`, reduce_amount,actual_total, platform_amount,`status`,close_type,
        `platform_commission`,`distribution_status`
        from `order` where order_id in
        <foreach collection="orderIds" open="(" item="orderId" close=")" separator=",">
            #{orderId}
        </foreach>
    </select>

    <update id="cancelOrders">
        update `order` set `status`=6,cancel_time = NOW(),update_time=NOW() where is_payed = 0 and order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
    </update>

    <select id="getOrderByOrderIdAndUserId" resultMap="orderMap">
        select o.*, oi.order_invoice_id
        from `order` o
                 left join `order_invoice` oi on o.order_id = oi.order_id
        where o.order_id = #{orderId}
          and o.user_id = #{userId}
    </select>

    <update id="receiptOrder">
        update `order`
        set `status`=5,
            finally_time = NOW(),
            update_time=NOW()
        where order_id = #{orderId}
          and `status` = 3
          and (refund_status <![CDATA[<>]]> 1 OR refund_status IS NULL)
    </update>

    <update id="deleteOrder">
        UPDATE `order`
        SET `delete_status`=2
        where order_id = #{orderId}
    </update>

    <select id="getOrderByOrderIdAndShopId" resultMap="orderMap">
        select o.*
        from `order` o
        where o.order_id = #{orderId}
          and o.shop_id = #{shopId}
    </select>
    <select id="getOrderAndOrderItemData" resultMap="orderAndOrderItem">
        SELECT o.user_id,
        o.*,
        oi.`order_item_id` oi_order_item_id ,
        oi.`shop_id` oi_shop_id,
        oi.`order_id` oi_order_id,
        oi.`spu_id` oi_spu_id,
        oi.`sku_id` oi_sku_id,
        oi.`user_id` oi_user_id,
        oi.`final_refund_id` oi_final_refund_id,
        oi.`distribution_user_id` oi_distribution_user_id,
        oi.`count` oi_count,
        oi.`pic` oi_pic,
        oi.`is_comm` oi_is_comm,
        oi.`refund_status` oi_refund_status,
        oi.`be_delivered_num` oi_be_delivered_num,
        oi.`delivery_type` oi_delivery_type,
        oi.`shop_cart_time` oi_shop_cart_time,
        oi.`price` oi_price,
        oi.`spu_total_amount` oi_spu_total_amount,
        oi.`actual_total` oi_actual_total,
        oi.`share_reduce` oi_share_reduce,
        oi.`platform_share_reduce` oi_platform_share_reduce,
        oi.`distribution_amount` oi_distribution_amount,
        oi.`distribution_parent_amount` oi_distribution_parent_amount,
        oi.`use_score` oi_use_score,
        oi.`gain_score` oi_gain_score,
        oi.`shop_change_free_amount` oi_shop_change_free_amount,
        oi.`spu_name` oi_spu_name,
        oi.`sku_name` oi_sku_name
        from `order` o
        join order_item oi on o.order_id = oi.order_id
        where o.order_id = #{orderId}
        <if test="shopId != null">
            and o.shop_id = #{shopId}
        </if>
    </select>

    <select id="getSubmitOrderPayAmountInfo" resultType="com.mall4j.cloud.order.bo.SubmitOrderPayAmountInfoBO">
        select order_addr_id, sum(actual_total) as totalFee,sum(score_amount) as totalScore,sum(order_score) as
        orderScore,order_number,
        max(create_time) as createTime,order_type
        from `order`
        where order_id in
        <foreach collection="orderIdList" item="orderId" separator="," close=")" open="(">
            #{orderId}
        </foreach>
    </select>

    <select id="getEsOrder" resultMap="esOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
               o.*,
               oi.`order_item_id`              oi_order_item_id,
               oi.`shop_id`                    oi_shop_id,
               oi.`order_id`                   oi_order_id,
               oi.`spu_id`                     oi_spu_id,
               oi.`sku_id`                     oi_sku_id,
               oi.`user_id`                    oi_user_id,
               oi.`final_refund_id`            oi_final_refund_id,
               oi.`distribution_user_id`       oi_distribution_user_id,
               oi.`count`                      oi_count,
               oi.`spu_name`                   oi_spu_name,
               oi.`sku_name`                   oi_sku_name,
               oi.`pic`                        oi_pic,
               oi.`is_comm`                    oi_is_comm,
               oi.`refund_status`              oi_refund_status,
               oi.`be_delivered_num`           oi_be_delivered_num,
               oi.`delivery_type`              oi_delivery_type,
               oi.`shop_cart_time`             oi_shop_cart_time,
               oi.`price`                      oi_price,
               oi.`spu_total_amount`           oi_spu_total_amount,
               oi.`actual_total`               oi_actual_total,
               oi.`share_reduce`               oi_share_reduce,
               oi.`platform_share_reduce`      oi_platform_share_reduce,
               oi.`distribution_amount`        oi_distribution_amount,
               oi.`distribution_parent_amount` oi_distribution_parent_amount,
               oi.`use_score`                  oi_use_score,
               oi.`gain_score`                 oi_gain_score,
               oa.consignee,
               oa.mobile,
               oa.province,
               oa.city,
               oa.area,
               oa.addr
        FROM `order` AS o
                 JOIN order_item oi ON o.order_id = oi.order_id
                 left JOIN order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.order_id = #{orderId}
    </select>

    <select id="getEsOrderByOrderNumber" resultMap="esOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
               o.*,
               oi.`order_item_id`              oi_order_item_id,
               oi.`shop_id`                    oi_shop_id,
               oi.`order_id`                   oi_order_id,
               oi.`spu_id`                     oi_spu_id,
               oi.`sku_id`                     oi_sku_id,
               oi.`user_id`                    oi_user_id,
               oi.`final_refund_id`            oi_final_refund_id,
               oi.`distribution_user_id`       oi_distribution_user_id,
               oi.`count`                      oi_count,
               oi.`spu_name`                   oi_spu_name,
               oi.`sku_name`                   oi_sku_name,
               oi.`pic`                        oi_pic,
               oi.`is_comm`                    oi_is_comm,
               oi.`refund_status`              oi_refund_status,
               oi.`be_delivered_num`           oi_be_delivered_num,
               oi.`delivery_type`              oi_delivery_type,
               oi.`shop_cart_time`             oi_shop_cart_time,
               oi.`price`                      oi_price,
               oi.`spu_total_amount`           oi_spu_total_amount,
               oi.`actual_total`               oi_actual_total,
               oi.`share_reduce`               oi_share_reduce,
               oi.`platform_share_reduce`      oi_platform_share_reduce,
               oi.`distribution_amount`        oi_distribution_amount,
               oi.`distribution_parent_amount` oi_distribution_parent_amount,
               oi.`use_score`                  oi_use_score,
               oi.`gain_score`                 oi_gain_score,
               oa.consignee,
               oa.mobile
        FROM `order` AS o
                 JOIN order_item oi ON o.order_id = oi.order_id
                 left JOIN order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.order_number = #{orderNumber}
    </select>

    <select id="getEsOrderByWeChatOrderId" resultMap="esOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
               o.*,
               oi.`order_item_id`              oi_order_item_id,
               oi.`shop_id`                    oi_shop_id,
               oi.`order_id`                   oi_order_id,
               oi.`spu_id`                     oi_spu_id,
               oi.`sku_id`                     oi_sku_id,
               oi.`user_id`                    oi_user_id,
               oi.`final_refund_id`            oi_final_refund_id,
               oi.`distribution_user_id`       oi_distribution_user_id,
               oi.`count`                      oi_count,
               oi.`spu_name`                   oi_spu_name,
               oi.`sku_name`                   oi_sku_name,
               oi.`pic`                        oi_pic,
               oi.`is_comm`                    oi_is_comm,
               oi.`refund_status`              oi_refund_status,
               oi.`be_delivered_num`           oi_be_delivered_num,
               oi.`delivery_type`              oi_delivery_type,
               oi.`shop_cart_time`             oi_shop_cart_time,
               oi.`price`                      oi_price,
               oi.`spu_total_amount`           oi_spu_total_amount,
               oi.`actual_total`               oi_actual_total,
               oi.`share_reduce`               oi_share_reduce,
               oi.`platform_share_reduce`      oi_platform_share_reduce,
               oi.`distribution_amount`        oi_distribution_amount,
               oi.`distribution_parent_amount` oi_distribution_parent_amount,
               oi.`use_score`                  oi_use_score,
               oi.`gain_score`                 oi_gain_score,
               oa.consignee,
               oa.mobile
        FROM `order` AS o
                 JOIN order_item oi ON o.order_id = oi.order_id
                 left JOIN order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.wechat_order_id = #{wechatOrderId}
    </select>
    <select id="getEsOrderByWeChatOrderIds" resultMap="esOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
               o.*,
               oi.`order_item_id`              oi_order_item_id,
               oi.`shop_id`                    oi_shop_id,
               oi.`order_id`                   oi_order_id,
               oi.`spu_id`                     oi_spu_id,
               oi.`sku_id`                     oi_sku_id,
               oi.`user_id`                    oi_user_id,
               oi.`final_refund_id`            oi_final_refund_id,
               oi.`distribution_user_id`       oi_distribution_user_id,
               oi.`count`                      oi_count,
               oi.`spu_name`                   oi_spu_name,
               oi.`sku_name`                   oi_sku_name,
               oi.`pic`                        oi_pic,
               oi.`is_comm`                    oi_is_comm,
               oi.`refund_status`              oi_refund_status,
               oi.`be_delivered_num`           oi_be_delivered_num,
               oi.`delivery_type`              oi_delivery_type,
               oi.`shop_cart_time`             oi_shop_cart_time,
               oi.`price`                      oi_price,
               oi.`spu_total_amount`           oi_spu_total_amount,
               oi.`actual_total`               oi_actual_total,
               oi.`share_reduce`               oi_share_reduce,
               oi.`platform_share_reduce`      oi_platform_share_reduce,
               oi.`distribution_amount`        oi_distribution_amount,
               oi.`distribution_parent_amount` oi_distribution_parent_amount,
               oi.`use_score`                  oi_use_score,
               oi.`gain_score`                 oi_gain_score,
               oa.consignee,
               oa.mobile
        FROM `order` AS o
                 JOIN order_item oi ON o.order_id = oi.order_id
                 left JOIN order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.wechat_order_id in
        <foreach collection="wechatOrderIds" item="wechatOrderId" separator="," open="(" close=")">
            #{wechatOrderId}
        </foreach>
    </select>

    <select id="getEsOrderByOrderIds" resultMap="esOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
        o.*,
        oi.`order_item_id`              oi_order_item_id,
        oi.`shop_id`                    oi_shop_id,
        oi.`order_id`                   oi_order_id,
        oi.`spu_id`                     oi_spu_id,
        oi.`sku_id`                     oi_sku_id,
        oi.`user_id`                    oi_user_id,
        oi.`final_refund_id`            oi_final_refund_id,
        oi.`distribution_user_id`       oi_distribution_user_id,
        oi.`count`                      oi_count,
        oi.`spu_name`                   oi_spu_name,
        oi.`sku_name`                   oi_sku_name,
        oi.`pic`                        oi_pic,
        oi.`is_comm`                    oi_is_comm,
        oi.`refund_status`              oi_refund_status,
        oi.`be_delivered_num`           oi_be_delivered_num,
        oi.`delivery_type`              oi_delivery_type,
        oi.`shop_cart_time`             oi_shop_cart_time,
        oi.`price`                      oi_price,
        oi.`spu_total_amount`           oi_spu_total_amount,
        oi.`actual_total`               oi_actual_total,
        oi.`share_reduce`               oi_share_reduce,
        oi.`platform_share_reduce`      oi_platform_share_reduce,
        oi.`distribution_amount`        oi_distribution_amount,
        oi.`distribution_parent_amount` oi_distribution_parent_amount,
        oi.`use_score`                  oi_use_score,
        oi.`gain_score`                 oi_gain_score,
        oa.consignee,
        oa.mobile
        FROM `order` AS o
        JOIN order_item oi ON o.order_id = oi.order_id
        left JOIN order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.order_id in
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </select>


    <select id="countNumberOfStatus" resultType="com.mall4j.cloud.order.vo.OrderCountVO">
        SELECT COUNT(o.order_id)                                                  as all_count,
               COUNT(CASE WHEN o.status = 1 THEN o.order_id ELSE NULL END)        AS unPay,
               COUNT(CASE WHEN o.status = 2 THEN o.order_id ELSE NULL END)        AS payed,
               COUNT(CASE WHEN o.status = 3 THEN o.order_id ELSE NULL END)        AS consignment,
               COUNT(CASE WHEN o.status = 5 THEN o.order_id ELSE NULL END)        AS success,
               COUNT(CASE WHEN o.refund_status = 1 THEN o.order_id ELSE NULL END) AS refund
        FROM `order` o
        WHERE o.user_id = #{userId}
          AND o.delete_status = 0
    </select>

    <!--       -->
    <select id="excelOrderList" resultMap="orderExcelVO">
        select
            o.order_id,o.order_number,o.create_time,o.actual_total,o.freight_amount,o.total,
            o.reduce_amount,o.order_score,o.status,o.pay_type,o.refund_status,o.delivery_type,
            o.user_id,o.store_id,o.distribution_user_type,o.distribution_user_id,
            o.shop_coupon_amount,o.platform_coupon_amount,o.buy_staff_id,
            oi.spu_id,oi.spu_name,oi.sku_name,oi.sku_id,oi.price,oi.count,oi.spu_total_amount,
            oi.share_reduce,oi.use_score,oi.actual_total as actual_total_item,oi.refund_status AS refund_status_item,
            oa.consignee,oa.mobile,CONCAT(oa.province, oa.city, oa.area, oa.addr) AS receiving_addr,
            finally_time,o.order_source,o.source_id,o.order_type,
            (select ifnull(sum(o1.refund_amount),0) from order_refund o1 where o1.order_id = o.order_id ) as totalRefundAmount,
            o.pay_time,o.order_source,o.promoter_id,o.finder_nickname,o.sharer_openid,o.wechat_order_id,
            o.remarks,o.platform_remarks
        from (
        SELECT
            *
        FROM `order` o
        <where>
            <if test="order.shopId != null">
                o.shop_id = #{order.shopId}
            </if>
            <if test="order.storeId != null">
                o.store_id = #{order.storeId}
            </if>
            <if test="order.shopName != null">
                AND o.shop_name LIKE CONCAT('%',#{order.shopName},'%')
            </if>
            <if test="order.userId != null">
                and o.user_id = #{order.userId}
            </if>
            <if test="order.orderId != null">
                and o.order_id = #{order.orderId}
            </if>
            <if test="order.orderType != null">
                and o.order_type = #{order.orderType}
            </if>
            <if test="order.payType == 0">
                and o.pay_type = 0
            </if>
            <if test="order.payType == 1">
                and o.pay_type IN (1,3,4,5,8)
            </if>
            <if test="order.payType == 2">
                and o.pay_type IN (2,6,7)
            </if>
            <if test="order.payType == 3">
                and o.pay_type IN (9)
            </if>
            <if test="order.status != null and order.status != 0">
                and o.status = #{order.status}
            </if>
            <if test="order.deliveryType != null">
                and o.delivery_type = #{order.deliveryType}
            </if>
            <if test="order.refundStatus != null">
                and o.refund_status = #{order.refundStatus}
            </if>
            <if test="order.isPayed != null">
                and o.is_payed = #{order.isPayed}
            </if>
            <if test="order.isComm != null">
                and o.`status` = 5
            </if>
            <if test="order.isComm != null or (order.spuName != null and order.spuName != '')">
                and o.order_id in
                (SELECT DISTINCT oi.order_id
                FROM order_item oi
                LEFT JOIN order_item_lang oil ON oi.order_item_id = oil.order_item_id
                <where>
                    <if test="order.isComm != null">
                        AND oi.is_comm = #{order.isComm}
                    </if>
                    <if test="order.spuName != null and order.spuName != ''">
                        AND oil.spu_name LIKE CONCAT('%',#{order.spuName} '%')
                    </if>
                </where>

                )
            </if>
            <if test="order.startTime != null">
                and o.create_time &gt;= #{order.startTime}
            </if>
            <if test="order.endTime != null">
                and o.create_time &lt;= #{order.endTime}
            </if>
            <if test="order.consignee != null and order.consignee != ''">
                and oa.consignee LIKE CONCAT('%',#{order.consignee} '%')
            </if>
            <if test="order.sourceId != null and order.sourceId != ''">
                and o.source_id = #{order.sourceId}
            </if>
            <if test="order.mobile != null">
                and oa.mobile = #{order.mobile}
            </if>
            <if test="order.payStartTime != null">
                AND o.pay_time &gt;= #{order.payStartTime}
            </if>
            <if test="order.payEndTime != null">
                AND o.pay_time &lt;= #{order.payEndTime}
            </if>
        </where>
        ORDER BY o.create_time DESC
        LIMIT #{pageAdapter.begin}, #{pageAdapter.size}
        ) o
        LEFT JOIN order_addr oa ON o.order_addr_id = oa.order_addr_id
        LEFT JOIN order_item oi ON oi.order_id = o.order_id
    </select>
    <!--       -->
    <select id="excelOrderListCount" resultType="java.lang.Integer">
        SELECT
        count(1)
        FROM `order` o
        <where>
            <if test="order.shopId != null">
                o.shop_id = #{order.shopId}
            </if>
            <if test="order.shopName != null">
                AND o.shop_name LIKE CONCAT('%',#{order.shopName},'%')
            </if>
            <if test="order.storeId != null">
                o.store_id = #{order.storeId}
            </if>
            <if test="order.userId != null">
                and o.user_id = #{order.userId}
            </if>
            <if test="order.orderId != null">
                and o.order_id = #{order.orderId}
            </if>
            <if test="order.orderType != null">
                and o.order_type = #{order.orderType}
            </if>
            <if test="order.payType == 0">
                and o.pay_type = 0
            </if>
            <if test="order.payType == 1">
                and o.pay_type IN (1,3,4,5,8)
            </if>
            <if test="order.payType == 2">
                and o.pay_type IN (2,6,7)
            </if>
            <if test="order.payType == 3">
                and o.pay_type IN (9)
            </if>
            <if test="order.status != null and order.status != 0">
                and o.status = #{order.status}
            </if>
            <if test="order.deliveryType != null">
                and o.delivery_type = #{order.deliveryType}
            </if>
            <if test="order.refundStatus != null">
                and o.refund_status = #{order.refundStatus}
            </if>
            <if test="order.isPayed != null">
                and o.is_payed = #{order.isPayed}
            </if>
            <if test="order.isComm != null">
                and o.`status` = 5
            </if>
            <if test="order.startTime != null">
                and o.create_time &gt;= #{order.startTime}
            </if>
            <if test="order.endTime != null">
                and o.create_time &lt;= #{order.endTime}
            </if>
            <if test="order.consignee != null and order.consignee != ''">
                and oa.consignee LIKE CONCAT('%',#{order.consignee} '%')
            </if>
            <if test="order.sourceId != null and order.sourceId != ''">
                and o.source_id = #{order.sourceId}
            </if>
            <if test="order.mobile != null">
                and oa.mobile = #{order.mobile}
            </if>
            <if test="order.payStartTime != null">
                AND o.pay_time &gt;= #{order.payStartTime}
            </if>
            <if test="order.payEndTime != null">
                AND o.pay_time &lt;= #{order.payEndTime}
            </if>
        </where>
    </select>


    <select id="excelUnDeliveryOrderList" resultMap="unDeliveryOrderExcelVO">
        SELECT reo.order_id,oil.`lang`,oil.`spu_name`,oil.`sku_name`,
        reo.`delivery_type`,oa.`consignee`,CONCAT(oa.province, oa.city, oa.area, oa.addr) AS receiving_addr,oa.`mobile`,
        oi.`be_delivered_num`
        FROM
        (SELECT tzo.`order_id`,tzo.`all_count`,tzo.`create_time`,tzo.`order_addr_id`,tzo.`delivery_type`,
        SUM(tzoi.`be_delivered_num`) AS all_oi_count
        FROM `order` tzo
        JOIN `order_item` tzoi ON tzo.`order_id` = tzoi.`order_id`
        <where>
            <if test="order.shopId != null">
                tzo.shop_id = #{order.shopId}
            </if>
            <if test="order.startTime != null">
                and tzo.create_time &gt;= #{order.startTime}
            </if>
            <if test="order.endTime != null">
                and tzo.create_time &lt;= #{order.endTime}
            </if>
            and tzo.status = 2 AND (tzo.`refund_status` IS NULL OR tzo.`refund_status` = 4) AND tzo.delivery_type != 2
        </where>
        GROUP BY tzo.`order_id`) reo
        JOIN `order_item` oi ON reo.`order_id` = oi.`order_id`
        JOIN `order_addr` oa ON oa.`order_addr_id` = reo.`order_addr_id`
        JOIN `order_item_lang` oil ON oil.`order_item_id` = oi.`order_item_id` and oil.lang = #{lang}
        WHERE reo.all_oi_count = reo.all_count
        ORDER BY reo.create_time DESC
    </select>
    <select id="countByOrderId" resultType="int">
        select count(*)
        from `order`
        where order_id = #{orderId}
    </select>

    <select id="getOrderCountOfStatusByShopId" resultType="com.mall4j.cloud.order.vo.OrderCountVO">
        SELECT COUNT(DISTINCT o.order_id)                                           as all_count,
               COUNT(DISTINCT CASE WHEN o.status = 1 THEN o.order_id ELSE NULL END) AS unPay,
               COUNT(DISTINCT CASE WHEN o.status = 2 THEN o.order_id ELSE NULL END) AS payed,
               COUNT(DISTINCT CASE WHEN o.status = 3 THEN o.order_id ELSE NULL END) AS consignment,
               COUNT(DISTINCT CASE WHEN o.status = 5 THEN o.order_id ELSE NULL END) AS success,
               COUNT(DISTINCT ore.refund_id)                                        AS refund,
               COUNT(DISTINCT oi.order_item_id)                                     AS comment
        FROM `order` o
                 LEFT JOIN order_item oi ON (o.order_id = oi.order_id AND oi.is_comm = 0 AND o.status = 5)
                 LEFT JOIN order_refund ore ON (o.order_id = ore.order_id AND ore.return_money_sts = 1)
        WHERE o.shop_id = #{shopId}
    </select>

    <select id="listActualByHour" resultType="com.mall4j.cloud.order.vo.OrderOverviewVO">
        SELECT DATE_FORMAT(o.pay_time, '%k') AS timeData,
        if(ISNULL(#{shopId}), ifnull(SUM(o.actual_total), 0), ifnull(SUM(o.actual_total + o.platform_amount -
        o.platform_commission - o.distribution_amount), 0)) AS payActual
        FROM `order` o
        <where>
            <if test="shopId != null">
                AND o.shop_id = #{shopId}
            </if>
            <if test="startTime != null">
                AND o.pay_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND o.pay_time &lt;= #{endTime}
            </if>
            AND o.is_payed =1
        </where>
        GROUP BY timeData
    </select>

    <select id="stafflistActualByHour" resultType="com.mall4j.cloud.order.vo.OrderOverviewVO">
        SELECT
            DATE_FORMAT(o.pay_time, '%k') AS timeData,
            ifnull(SUM(o.actual_total), 0) AS payActual
        FROM `order` o
        <where>
            AND o.is_payed =1
            <if test="shopIds != null and shopIds.size() != 0">
                and o.store_id IN
                <foreach collection="shopIds" item="shopId" separator="," open="(" close=")">
                    #{shopId}
                </foreach>
            </if>
            <if test="startTime != null">
                AND o.pay_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND o.pay_time &lt;= #{endTime}
            </if>
        </where>
        GROUP BY timeData
    </select>


    <select id="listOrderOverviewInfoByShopIdAndDateRange" resultType="com.mall4j.cloud.order.vo.OrderOverviewVO">
        SELECT
        substring(o.pay_time,1,10) AS timeData,
        COUNT(*) AS payOrderCount,
        if(ISNULL(#{shopId}), ifnull(SUM(o.actual_total), 0), ifnull(SUM(o.actual_total + o.platform_amount -
        o.platform_commission - o.distribution_amount), 0)) AS payActual
        FROM
        `order` o
        <where>
            <if test="shopId != null">
                AND o.shop_id = #{shopId}
            </if>
            <if test="startTime != null">
                AND o.pay_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND o.pay_time &lt;= #{endTime}
            </if>
            AND o.is_payed = 1
        </where>
        GROUP BY
        substring(o.pay_time,1,10)
        ORDER by
        substring(o.pay_time,1,10)
    </select>
    <select id="staffListOrderOverviewInfoByShopIdAndDateRange" resultType="com.mall4j.cloud.order.vo.OrderOverviewVO">
        SELECT
        substring(o.pay_time,1,10) AS timeData,
        COUNT(*) AS payOrderCount,
        ifnull(SUM(o.actual_total), 0) AS payActual
        FROM
        `order` o
        <where>
            AND o.is_payed =1
            <if test="shopIds != null and shopIds.size() != 0">
                and o.store_id IN
                <foreach collection="shopIds" item="shopId" separator="," open="(" close=")">
                    #{shopId}
                </foreach>
            </if>
            <if test="startTime != null">
                AND o.pay_time >= #{startTime}
            </if>
            <if test="endTime != null">
                AND o.pay_time &lt;= #{endTime}
            </if>
        </where>
        GROUP BY
        substring(o.pay_time,1,10)
        ORDER by
        substring(o.pay_time,1,10)
    </select>

    <select id="getOrderOverviewInfoByShopId" resultType="com.mall4j.cloud.order.vo.OrderOverviewVO">
        SELECT if(ISNULL(#{shopId}), ifnull(SUM(actual_total), 0), ifnull(SUM(actual_total + platform_amount -
        platform_commission - distribution_amount), 0)) AS payActual,
        COUNT(DISTINCT user_id) AS payUserCount,
        COUNT(*) AS payOrderCount
        FROM `order` o
        <where>
            <if test="shopId != null">
                AND o.shop_id = #{shopId}
            </if>
            <if test="startTime != null">
                AND o.pay_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND o.pay_time &lt;= #{endTime}
            </if>
            AND o.is_payed =1
        </where>
    </select>

    <select id="getStaffOrderOverviewInfoByShopId" resultType="com.mall4j.cloud.order.vo.OrderOverviewVO">
        SELECT ifnull(SUM(actual_total), 0) AS payActual,
        COUNT(DISTINCT user_id) AS payUserCount,
        COUNT(*) AS payOrderCount,
        ifnull(sum(all_count),0) AS spuCount
        FROM `order` o
        <where>
            AND o.is_payed =1
            <if test="shopIds != null and shopIds.size() != 0">
                and o.store_id IN
                <foreach collection="shopIds" item="shopId" separator="," open="(" close=")">
                    #{shopId}
                </foreach>
            </if>
            <if test="startTime != null">
                AND o.pay_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND o.pay_time &lt;= #{endTime}
            </if>
        </where>
    </select>

    <select id="countOrderByUserIds" resultType="com.mall4j.cloud.common.order.vo.UserOrderStatisticVO"
            parameterType="java.util.List">
        SELECT temp.userId,
        <!-- 最近消费时间 下单支付的时间(积分支付/余额支付), 充值时间， 比较获取最新时间-->
        (SELECT o.pay_time FROM `order` o WHERE o.is_payed = 1 AND o.delete_status = 0 AND o.user_id = temp.userId ORDER
        BY o.pay_time DESC LIMIT 0,1) AS reConsTime,
        <!-- 消费金额-->
        IFNULL((SELECT SUM(o.actual_total) FROM `order` o WHERE o.pay_type != 0 AND o.is_payed = 1 AND o.delete_status =
        0 AND o.user_id = temp.userId),0) AS consAmount,
        <!-- 实付金额 累计支付的金额: 除了余额支付/积分支付的订单累计金额 + 余额充值金额-->
        IFNULL((SELECT SUM(o.actual_total) FROM `order` o WHERE (o.pay_type != 0 AND o.pay_type != 9) AND o.is_payed = 1
        AND o.delete_status = 0 AND o.user_id = temp.userId),0) AS actualAmount,
        <!-- 消费次数-->
        (SELECT COUNT(o.order_id) FROM `order` o WHERE o.pay_type != 0 AND o.is_payed = 1 AND o.delete_status = 0 AND
        o.user_id = temp.userId) AS consTimes,
        <!-- 优惠总金额-->
        IFNULL((SELECT SUM(o.reduce_amount) FROM `order` o WHERE o.pay_type != 0 AND o.is_payed = 1 AND o.delete_status
        = 0 AND o.user_id = temp.userId),0) AS reduceAmount,
        <!-- 平均折扣-->
        (SELECT CONVERT((SELECT CASE WHEN consTimes &lt;= 0 THEN 0 WHEN consTimes > 0 THEN reduceAmount/consTimes
        END),DECIMAL(10,2))) AS averDiscount,
        <!-- 售后金额，退款金额-->
        IFNULL((SELECT SUM(tor.refund_amount) FROM `order_refund` tor WHERE tor.user_id = temp.userId AND
        tor.return_money_sts = 5),0) AS afterSaleAmount,
        <!-- 售后次数，退款次数-->
        (SELECT COUNT(tor.refund_id) FROM `order_refund` tor WHERE tor.user_id = temp.userId AND tor.return_money_sts =
        5) AS afterSaleTimes
        FROM
        ( SELECT DISTINCT(user_id) AS userId FROM `order`
        WHERE user_id IN
        <foreach collection="userIds" item="userId" index="index" open="(" close=")" separator=",">
            #{userId}
        </foreach>
        ) temp
    </select>
    <select id="countPageOrderByUserId" resultType="java.lang.Integer">
        SELECT count(*)
        FROM `order`
        WHERE `pay_time` IS NOT NULL
          AND user_id = #{userId}
    </select>
    <select id="pageByUserId" resultType="com.mall4j.cloud.order.vo.OrderVO">
        SELECT o.`pay_time`,
               o.`order_id`,
               o.`order_number`,
               o.`freight_amount`,
               o.`actual_total`,
               o.`reduce_amount`,
               o.`order_type`,
               o.`pay_type`,
               IFNULL(o.`order_score`, 0) as order_score,
               o.`order_source`,
               o.`total`
        FROM `order` o
        WHERE o.`pay_time` IS NOT NULL
          AND o.user_id = #{userId}
        ORDER BY o.`pay_time` DESC
            limit #{page.begin}, #{page.size}
    </select>

    <select id="listByOrderIds" resultType="com.mall4j.cloud.api.order.bo.SendNotifyBO">
        SELECT GROUP_CONCAT(oil.spu_name,IFNULL(oil.sku_name,'')) AS spu_name,o.`shop_id`, o.`order_id` as biz_id,
        o.user_id,o.actual_total, oa.mobile
        FROM `order` o
        LEFT JOIN `order_item` oi ON oi.order_id = o.order_id
        LEFT JOIN order_item_lang oil ON oil.order_item_id = oi.order_item_id
        LEFT JOIN order_addr oa ON oa.order_addr_id = o.order_addr_id
        where o.order_id in
        <foreach collection="orderIds" open="(" item="orderId" close=")" separator=",">
            #{orderId}
        </foreach>
        GROUP BY o.order_id
    </select>
    <select id="getOrderUserIdsBySearchDTO" resultType="java.lang.Long"
            parameterType="com.mall4j.cloud.common.dto.OrderSearchDTO">
        SELECT user_id FROM `order`
        <where>
            <if test="orderSearchDTO.isPayed != null ">
                AND `is_payed` = #{orderSearchDTO.isPayed}
            </if>
            <if test="orderSearchDTO.deleteStatus != null ">
                AND `delete_status` = #{orderSearchDTO.deleteStatus}
            </if>
            <if test="orderSearchDTO.status != null ">
                AND `status` = #{orderSearchDTO.status}
            </if>
            <if test="orderSearchDTO.startTime != null and orderSearchDTO.endTime != null ">
                AND (pay_time BETWEEN #{orderSearchDTO.startTime} AND #{orderSearchDTO.endTime})
            </if>
            <if test="orderSearchDTO.actualTotalMin != null and orderSearchDTO.actualTotalMax != null ">
                AND (actual_total BETWEEN #{orderSearchDTO.actualTotalMin} AND #{orderSearchDTO.actualTotalMax})
            </if>
        </where>

    </select>
    <select id="listUserIdByPurchaseNum" resultType="java.lang.Long">
        SELECT user_id
        FROM `order`
        WHERE is_payed = #{isPayed}
        AND delete_status = #{deleteStatus}
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="startDate != null">
            AND finally_time BETWEEN #{startDate}
        </if>
        <if test="endDate != null">
            AND #{endDate}
        </if>
        GROUP BY user_id
        HAVING COUNT(user_id) BETWEEN #{minNum} AND #{maxNum}
    </select>
    <select id="listUserIdByAverageActualTotal" resultType="java.lang.Long">
        SELECT user_id
        FROM `order`
        WHERE is_payed = #{isPayed}
        AND delete_status = #{deleteStatus}
        AND status = #{status}
        <if test="startDate != null">
            AND finally_time BETWEEN #{startDate}
        </if>
        <if test="endDate != null">
            AND #{endDate}
        </if>
        GROUP BY user_id
        HAVING AVG(actual_total) BETWEEN #{minAmount} AND #{maxAmount}
    </select>
    <select id="getPaidMemberByParam" resultType="com.mall4j.cloud.api.user.bo.UserOrderStatisticBO"
            parameterType="com.mall4j.cloud.api.user.dto.MemberReqDTO">
        SELECT count(*) as cons_times, o.user_id,SUM(actual_total) AS actual_amount
        FROM `order` o
        <where>
            o.is_payed = 1
            <if test="param.shopId != null and param.shopId != 0">
                AND o.shop_id = #{param.shopId}
            </if>
            <if test="param.dateTime != null">
                AND o.pay_time <![CDATA[ <= ]]> #{param.dateTime}
            </if>
            <if test="param.dateTime == null and param.startTime != null and param.endTime != null">
                AND ( o.pay_time  <![CDATA[ >= ]]> #{param.startTime} AND o.pay_time  <![CDATA[ <= ]]> #{param.endTime})
            </if>
        </where>
        GROUP BY o.user_id
    </select>

    <select id="getMemberPayData" resultType="com.mall4j.cloud.api.user.bo.UserOrderStatisticBO">
        SELECT oe.user_id,IFNULL(COUNT(oe.user_id),0) AS cons_times,IFNULL(SUM(oe.actual_total),0) AS actual_amount
        FROM `order` oe
        WHERE oe.pay_time <![CDATA[ >= ]]> #{param.dayStartTime} AND oe.pay_time  <![CDATA[ < ]]>  #{param.endTime}
        <if test="type == 0">
            AND oe.is_payed = 1
        </if>
        <if test="type == 1">
            AND oe.is_payed != 1
        </if>
        GROUP BY oe.user_id
    </select>

    <select id="getTradeRetained" resultType="com.mall4j.cloud.api.order.vo.CustomerRetainVO"
            parameterType="com.mall4j.cloud.api.order.dto.CustomerRetainedDTO">
        SELECT
        <!--当前月-->
        a.pay_time_month AS currentMonth,
        <!--新成交客户数-->
        COUNT(DISTINCT a.user_id_a) AS newCustomers,
        <!--第1月留存数-->
        COUNT(DISTINCT CASE WHEN PERIOD_DIFF(DATE_FORMAT(b.pay_time,'%Y%m'), DATE_FORMAT(CONCAT(a.pay_time_month,
        '-01'),'%Y%m')) = 1 THEN b.user_id ELSE NULL END) AS firstMonthRemain,
        <!--第2月留存数-->
        COUNT(DISTINCT CASE WHEN PERIOD_DIFF(DATE_FORMAT(b.pay_time,'%Y%m'), DATE_FORMAT(CONCAT(a.pay_time_month,
        '-01'),'%Y%m')) = 2 THEN b.user_id ELSE NULL END) AS secondMonthRemain,
        <!--第3月留存数-->
        COUNT(DISTINCT CASE WHEN PERIOD_DIFF(DATE_FORMAT(b.pay_time,'%Y%m'), DATE_FORMAT(CONCAT(a.pay_time_month,
        '-01'),'%Y%m')) = 3 THEN b.user_id ELSE NULL END) AS thirdMonthRemain,
        <!--第4月留存数-->
        COUNT(DISTINCT CASE WHEN PERIOD_DIFF(DATE_FORMAT(b.pay_time,'%Y%m'), DATE_FORMAT(CONCAT(a.pay_time_month,
        '-01'),'%Y%m')) = 4 THEN b.user_id ELSE NULL END) AS fourthMonthRemain,
        <!--第5月留存数-->
        COUNT(DISTINCT CASE WHEN PERIOD_DIFF(DATE_FORMAT(b.pay_time,'%Y%m'), DATE_FORMAT(CONCAT(a.pay_time_month,
        '-01'),'%Y%m')) = 5 THEN b.user_id ELSE NULL END) AS fifthMonthRemain,
        <!--第6月留存数-->
        COUNT(DISTINCT CASE WHEN PERIOD_DIFF(DATE_FORMAT(b.pay_time,'%Y%m'), DATE_FORMAT(CONCAT(a.pay_time_month,
        '-01'),'%Y%m')) = 6 THEN b.user_id ELSE NULL END) AS sixthMonthRemain
        FROM
        (
        SELECT DISTINCT
        DATE_FORMAT(pay_time,'%Y-%m') AS pay_time_month,
        user_id AS user_id_a
        FROM `order`
        WHERE is_payed = 1
        <if test="customerRetainedDTO.shopId != null and customerRetainedDTO.shopId != 0">
            AND shop_id = #{customerRetainedDTO.shopId}
        </if>
        GROUP BY user_id
        ORDER BY pay_time_month
        ) a
        LEFT JOIN `order` b ON a.user_id_a = b.user_id AND b.is_payed = 1
        <if test="customerRetainedDTO.shopId != null and customerRetainedDTO.shopId != 0">
            AND b.shop_id = #{customerRetainedDTO.shopId}
        </if>
        GROUP BY a.pay_time_month
        <if test="customerRetainedDTO.startTime != null and customerRetainedDTO.endTime != null">
            HAVING (a.pay_time_month &gt;= #{customerRetainedDTO.startTime} AND a.pay_time_month &lt;=
            #{customerRetainedDTO.endTime})
        </if>
    </select>
    <select id="getProdEffectByDateAndProdIds" resultType="com.mall4j.cloud.api.order.vo.OrderProdEffectRespVO">
        SELECT op.*,COUNT(*) place_order_person,SUM(IF(op.pay_order > 0,1,0)) pay_person,
        SUM(op.op_pay_num) pay_num,SUM(op_place_order_amount) place_order_amount,
        SUM(op_place_order_num) place_order_num,
        SUM(op_pay_amount) pay_amount,
        SUM(pay_order) pay_order_num
        FROM (
        SELECT oi.spu_id,o.is_payed,SUM(oi.count) op_place_order_num, SUM(IF(o.is_payed = 1,oi.count, 0)) op_pay_num,
        SUM(oi.actual_total) op_place_order_amount, SUM(IF(o.is_payed = 1,oi.actual_total,0)) op_pay_amount
        ,SUM(o.is_payed) pay_order
        FROM order_item oi
        JOIN `order` o ON o.order_id = oi.order_id
        WHERE o.create_time &gt;= #{startTime} AND o.create_time &lt;= #{endTime} AND oi.spu_id IN
        <foreach collection="spuIds" item="spuId" separator="," open="(" close=")">
            #{spuId}
        </foreach>
        GROUP BY oi.spu_id,o.user_id ) AS op
        GROUP BY op.spu_id
    </select>
    <update id="updateGroupOrderSuccessStatus">
        update `order` set status = 2 where order_id in
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
        and status = 7
    </update>

    <select id="listFlowOrderByOrderIds" resultType="com.mall4j.cloud.api.order.vo.FlowOrderVO">
        SELECT o.order_id,oi.user_id,oi.spu_id, SUM(oi.actual_total) order_amount, o.is_payed
        FROM `order` o
        JOIN order_item oi ON o.order_id = oi.order_id
        WHERE o.order_id IN
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
        GROUP BY oi.order_id,oi.spu_id
    </select>

    <select id="listOrderId" resultType="java.lang.Long">
        select order_id from `order` o where status = #{orderStatus}
        <if test="orderStatus == 2">
            and pay_time &lt; #{startTime}
        </if>
        <if test="orderStatus == 3">
            and delivery_time &lt; #{startTime}
        </if>
        <if test="orderStatus == 5">
            and finally_time &lt; #{startTime}
        </if>
        and ((distribution_status = 0 and distribution_user_id > 0 and distribution_amount > 0)
        or (developing_status = 0 and developing_user_id > 0 and developing_amount > 0))
        AND NOT EXISTS (
        SELECT
        1
        FROM
        mall4cloud_order.order_refund r
        WHERE
        r.order_id = o.order_id
        AND r.return_money_sts NOT IN (-1, 5 ))
    </select>

    <select id="confirmOrderListOrderId" resultType="java.lang.Long">
        select order_id from `order` o where status = #{orderStatus}
        <if test="orderStatus == 2">
            and pay_time &lt; #{startTime}
        </if>
        <if test="orderStatus == 3">
            and delivery_time &lt; #{startTime}
            and (refund_status <![CDATA[<>]]> 1 OR refund_status IS NULL)
        </if>
        <if test="orderStatus == 5">
            and finally_time &lt; #{startTime}
        </if>
    </select>

    <select id="listDistributionOrderId" resultType="java.lang.Long">
        select order_id from `order` o where status = #{orderStatus}
        <if test="orderStatus == 2">
            and pay_time &lt; #{startTime}
        </if>
        <if test="orderStatus == 3">
            and delivery_time &lt; #{startTime}
        </if>
        <if test="orderStatus == 5">
            and finally_time &lt; #{startTime}
        </if>
        and ((distribution_status = 0 and distribution_user_id > 0 and distribution_amount > 0)
        or (developing_status = 0 and developing_user_id > 0 and developing_amount > 0))
        AND NOT EXISTS (
        SELECT
        1
        FROM
        mall4cloud_order.order_refund r
        WHERE
        r.order_id = o.order_id
        AND r.return_money_sts NOT IN (-1, 5 ))
    </select>

    <update id="settledOrder">
        update `order` set is_settled = 1,settled_time = NOW() where order_id in
        <foreach collection="orderIds" item="orderId" open="(" close=")" separator=",">
            #{orderId}
        </foreach>
    </update>

    <select id="countOrderNum" resultType="java.lang.Long">
        select count(order_id) from `order` where delete_status != 2 AND create_time &lt; #{endTime}
        <if test="startTime != null">
            and create_time &gt;= #{startTime}
        </if>
    </select>

    <select id="minOrderCreateTime" resultType="java.util.Date">
        SELECT MIN(create_time)
        FROM `order`
    </select>

    <select id="countNormalOrderByOrderIds" resultType="java.lang.Integer">
        SELECT ifnull(count(order_id),0) FROM `order`
        WHERE `status` <![CDATA[<>]]> 6 AND order_id IN
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </select>
    <update id="updateOrderTime">
        update `order`
        set update_time = NOW()
        where order_id = #{orderId}
    </update>
    <select id="listSumDataByUserIds" resultType="com.mall4j.cloud.api.order.vo.SumAmountVO">
        SELECT o.`user_id`, SUM(os.`pay_amount`) AS sum_of_consumption, COUNT(os.`settlement_id`) AS expense_number
        FROM `order` o
        LEFT JOIN `order_settlement` os ON o.`order_id` = os.`order_id` AND os.`is_payed` = 1 AND os.`pay_amount` > 0
        WHERE o.`user_id` in
        <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
        GROUP BY o.`user_id`
    </select>
    <select id="listOrder" resultMap="orderAndItemMap">
        SELECT data.*,oi.order_item_id oi_order_item_id,oi.create_time oi_create_time,oi.update_time oi_update_time,
        oi.shop_id oi_shop_id,oi.order_id oi_order_id,oi.category_id oi_category_id,oi.spu_id oi_spu_id,oi.sku_id
        oi_sku_id,oi.user_id oi_user_id,
        oi.final_refund_id oi_final_refund_id,oi.distribution_user_id oi_distribution_user_id,oi.count oi_count,oi.pic
        oi_pic,oi.is_comm oi_is_comm,
        oi.comm_time oi_comm_time,oi.refund_status oi_refund_status,oi.be_delivered_num
        oi_be_delivered_num,oi.delivery_type oi_delivery_type,
        oi.shop_cart_time oi_shop_cart_time,oi.price oi_price,oi.spu_total_amount oi_spu_total_amount,oi.actual_total
        oi_actual_total,
        oi.share_reduce oi_share_reduce,oi.platform_share_reduce oi_platform_share_reduce,oi.distribution_amount
        oi_distribution_amount,
        oi.distribution_parent_amount oi_distribution_parent_amount,
        oi.score_fee oi_score_fee,oi.use_score oi_use_score,oi.gain_score
        oi_gain_score,oi.rate oi_rate,
        oi.platform_commission oi_platform_commission,oi.score_amount oi_score_amount,oi.member_amount
        oi_member_amount,oi.platform_coupon_amount oi_platform_coupon_amount,
        oi.shop_coupon_amount oi_shop_coupon_amount,oi.discount_amount
        oi_discount_amount,oi.platform_free_freight_amount oi_platform_free_freight_amount,
        oi.free_freight_amount oi_free_freight_amount,oi.shop_change_free_amount oi_shop_change_free_amount,oil.lang
        oi_lang,
        oi.spu_name oi_spu_name,
        oi.sku_name oi_sku_name
        FROM
        (
        SELECT o.*,oa.consignee,oa.mobile,oiv.order_invoice_id
        FROM `order` o
        LEFT JOIN order_addr oa ON oa.order_addr_id = o.order_addr_id
        LEFT JOIN order_invoice oiv ON oiv.order_id = o.order_id
        <where>
            <if test="order.startTime != null">
                and o.create_time &gt;= #{order.startTime}
            </if>
            <if test="order.endTime != null">
                and o.create_time &lt;= #{order.endTime}
            </if>
            <if test="order.orderId != null">
                and o.order_id = #{order.orderId}
            </if>
            AND o.delete_status != 2
        </where>
        ORDER BY o.create_time DESC
        LIMIT #{page.begin}, #{page.size}
        ) data
        LEFT JOIN order_item oi ON data.order_id = oi.order_id
        LEFT JOIN order_item_lang oil ON oil.order_item_id = oi.order_item_id
    </select>
    <update id="updateRefundStatusBatchById">
        <foreach collection="orders" item="order" separator=";">
            update `order`
            set
            `refund_status` = #{order.refundStatus}
            where
            order_id = #{order.orderId}
        </foreach>
    </update>

    <select id="hasBuySuccessProd" resultType="long">
        SELECT COUNT(oi.order_item_id)
        FROM order_item oi
                 JOIN `order` o ON o.order_id = oi.order_id
        WHERE o.user_id = #{userId}
          and o.status = 5
          and oi.spu_id = #{spuId}
    </select>

    <select id="calculateUserInShopData" resultType="com.mall4j.cloud.api.order.vo.UserShoppingDataVO">
        select count(o.order_id)              as expense_number,
               ifnull(SUM(o.actual_total), 0) as sum_of_consumption
        from `order` o
        where o.user_id = #{userId}
          and (o.status = 4 or o.status = 5)
    </select>

    <select id="getEsOrderList" resultMap="esOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
        o.*,
        oi.`order_item_id` oi_order_item_id,
        oi.`shop_id` oi_shop_id,
        oi.`order_id` oi_order_id,
        oi.`spu_id` oi_spu_id,
        oi.`sku_id` oi_sku_id,
        oi.`user_id` oi_user_id,
        oi.`final_refund_id` oi_final_refund_id,
        oi.`distribution_user_id` oi_distribution_user_id,
        oi.`count` oi_count,
        oi.`spu_name` oi_spu_name,
        oi.`sku_name` oi_sku_name,
        oi.`pic` oi_pic,
        oi.`is_comm` oi_is_comm,
        oi.`refund_status` oi_refund_status,
        oi.`be_delivered_num` oi_be_delivered_num,
        oi.`delivery_type` oi_delivery_type,
        oi.`shop_cart_time` oi_shop_cart_time,
        oi.`price` oi_price,
        oi.`spu_total_amount` oi_spu_total_amount,
        oi.`actual_total` oi_actual_total,
        oi.`share_reduce` oi_share_reduce,
        oi.`platform_share_reduce` oi_platform_share_reduce,
        oi.`distribution_amount` oi_distribution_amount,
        oi.`distribution_parent_amount` oi_distribution_parent_amount,
        oi.`use_score` oi_use_score,
        oi.`gain_score` oi_gain_score,
        oa.consignee,
        oa.mobile
        FROM `order` AS o
        JOIN order_item oi ON o.order_id = oi.order_id
        left JOIN order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.order_id IN
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </select>
    <select id="listBySettledOrOrderIds" resultMap="esOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
        o.*,
        oi.`order_item_id` oi_order_item_id,
        oi.`shop_id` oi_shop_id,
        oi.`order_id` oi_order_id,
        oi.`spu_id` oi_spu_id,
        oi.`sku_id` oi_sku_id,
        oi.`user_id` oi_user_id,
        oi.`final_refund_id` oi_final_refund_id,
        oi.`distribution_user_id` oi_distribution_user_id,
        oi.`count` oi_count,
        oi.`spu_name` oi_spu_name,
        oi.`sku_name` oi_sku_name,
        oi.`pic` oi_pic,
        oi.`is_comm` oi_is_comm,
        oi.`refund_status` oi_refund_status,
        oi.`be_delivered_num` oi_be_delivered_num,
        oi.`delivery_type` oi_delivery_type,
        oi.`shop_cart_time` oi_shop_cart_time,
        oi.`price` oi_price,
        oi.`spu_total_amount` oi_spu_total_amount,
        oi.`actual_total` oi_actual_total,
        oi.`share_reduce` oi_share_reduce,
        oi.`platform_share_reduce` oi_platform_share_reduce,
        oi.`distribution_amount` oi_distribution_amount,
        oi.`distribution_parent_amount` oi_distribution_parent_amount,
        oi.`use_score` oi_use_score,
        oi.`gain_score` oi_gain_score,
        oa.consignee,
        oa.mobile
        FROM `order` AS o
        JOIN order_item oi ON o.order_id = oi.order_id
        left JOIN order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.is_settled = #{settled}
        <if test="orderIds != null and orderIds.size() != 0">
            and o.order_id IN
            <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
                #{orderId}
            </foreach>
        </if>
    </select>
    <select id="getDeliveryInfoByOrderId" resultType="com.mall4j.cloud.order.model.Order">
        select o.order_id, o.user_id, o.shop_id, oa.consignee, oa.mobile
        from `order` o
                 left join order_addr oa on o.order_addr_id = oa.order_addr_id
        where o.order_id = #{orderId}
    </select>

    <select id="listPageWithDistributionStaff" resultMap="distributionOrderVO">
        select data.*,
        oi.pic oi_pic,
        oi.order_item_id oi_order_item_id,
        oi.sku_id oi_sku_id,
        oi.spu_id oi_spu_id,
        oi.count oi_count,
        oi.price oi_price,
        oi.actual_total oi_actual_total,
        oi.spu_total_amount oi_spu_total_amount,
        oi.spu_name oi_spu_name,
        oi.sku_name oi_sku_name,
        oi.refund_status oi_refund_status,
        oi.distribution_amount oi_distribution_amount,
        oi.distribution_parent_amount oi_distribution_parent_amount,
        oi.distribution_amount_snapshot oi_distribution_amount_snapshot,
        oi.distribution_parent_amount_snapshot oi_distribution_parent_amount_snapshot
        from
        (
        select
        o.order_id,o.order_number,o.actual_total,o.total,o.create_time,
        o.distribution_amount,'0' as developing_amount,
        o.distribution_status,o.distribution_relation,o.distribution_user_type
        from `order` o
        where o.distribution_user_type = 1 and o.distribution_user_id = #{order.distributionUserId} and
        o.distribution_amount > 0
        union all
        select
        o2.order_id,o2.order_number,o2.actual_total,o2.total,o2.create_time,
        0 as distribution_amount,o2.developing_amount,
        o2.distribution_status,o2.distribution_relation,o2.distribution_user_type
        from `order` o2
        where o2.developing_user_id = #{order.distributionUserId} and o2.developing_amount > 0
        ) data
        left join order_item oi on data.order_id = oi.order_id
        <where>
            <if test="order.distributionStatusList != null and order.distributionStatusList.size() != 0">
                and data.distribution_status IN
                <foreach collection="order.distributionStatusList" item="status" separator="," open="(" close=")">
                    #{status}
                </foreach>
            </if>
            <if test="order.startTime != null">
                and data.create_time <![CDATA[>=]]> #{order.startTime}
            </if>
            <if test="order.endTime != null">
                and data.create_time <![CDATA[<=]]> #{order.endTime}
            </if>
            <if test="order.distributionAmountMin != null">
                and data.distribution_amount <![CDATA[>=]]> #{order.distributionAmountMin}
            </if>
            <if test="order.distributionAmountMax != null">
                and data.distribution_amount <![CDATA[<=]]> #{order.distributionAmountMax}
            </if>
            <if test="order.distributionRelationList != null and order.distributionRelationList.size() != 0">
                and data.distribution_relation IN
                <foreach collection="order.distributionRelationList" item="distributionRelation" separator="," open="("
                         close=")">
                    #{distributionRelation}
                </foreach>
            </if>
            <if test="order.distributionRelation != null">
                and data.distribution_relation = #{order.distributionRelation}
            </if>
            <if test="order.spuName != null and order.spuName != ''">
                and oi.spu_name like CONCAT('%',#{order.spuName} '%')
            </if>
        </where>
        order by data.create_time desc
        limit #{page.begin}, #{page.size}
    </select>

    <select id="listPageWithDistributionUser" resultMap="distributionOrderVO">
        select
        o.order_id,o.order_number,
        o.actual_total,o.total,o.create_time,o.distribution_amount,o.distribution_status,
        oi.pic oi_pic,
        oi.order_item_id oi_order_item_id,
        oi.spu_id oi_spu_id,
        oi.sku_id oi_sku_id,
        oi.count oi_count,
        oi.price oi_price,
        oi.actual_total oi_actual_total,
        oi.spu_total_amount oi_spu_total_amount,
        oi.spu_name oi_spu_name,
        oi.sku_name oi_sku_name,
        oi.refund_status oi_refund_status,
        oi.distribution_amount oi_distribution_amount,
        oi.distribution_parent_amount oi_distribution_parent_amount,
        oi.distribution_amount_snapshot oi_distribution_amount_snapshot,
        oi.distribution_parent_amount_snapshot oi_distribution_parent_amount_snapshot
        from `order` o
        left join order_item oi on o.order_id = oi.order_id
        where o.distribution_user_type = 2 and o.distribution_user_id = #{order.distributionUserId}
        and o.distribution_amount > 0
        <if test="order.distributionStatusList != null and order.distributionStatusList.size() != 0">
            and o.distribution_status IN
            <foreach collection="order.distributionStatusList" item="status" separator="," open="(" close=")">
                #{status}
            </foreach>
        </if>
        <if test="order.startTime != null">
            and o.create_time <![CDATA[>=]]> #{order.startTime}
        </if>
        <if test="order.endTime != null">
            and o.create_time <![CDATA[<=]]> #{order.endTime}
        </if>
        <if test="order.distributionRelationList != null and order.distributionRelationList.size() != 0">
            and o.distribution_relation IN
            <foreach collection="order.distributionRelationList" item="distributionRelation" separator="," open="("
                     close=")">
                #{distributionRelation}
            </foreach>
        </if>
        <if test="order.distributionRelation != null">
            and o.distribution_relation = #{order.distributionRelation}
        </if>
        <if test="order.distributionAmountMin != null">
            and o.distribution_amount <![CDATA[>=]]> #{order.distributionAmountMin}
        </if>
        <if test="order.distributionAmountMax != null">
            and o.distribution_amount <![CDATA[<=]]> #{order.distributionAmountMax}
        </if>
        <if test="order.spuName != null and order.spuName != ''">
            and oi.spu_name like CONCAT('%',#{order.spuName} '%')
        </if>
        order by o.create_time desc
        limit #{page.begin}, #{page.size}
    </select>
    <select id="listByStaffAndTime" resultMap="orderMap">
        select
        <include refid="Vo_Column_List"/>
        from `order`
        where ((distribution_user_type = 1 and distribution_user_id = #{staffId} and distribution_status = 1)
        or (developing_user_id = #{staffId} and developing_status = 1))
        and #{endTime} >= pay_time
    </select>
    <select id="listDistributionOrders" resultMap="esDistributionOrderAndOrderItemAndUserAddrMap">
        select
        <include refid="Vo_Column_List"/>
        from `order`
        where (distribution_user_id > 0 or developing_user_id > 0)
        <if test="queryDTO.orderNo != null and queryDTO.orderNo != ''">
            and order_number= #{queryDTO.orderNo}
        </if>
        <if test="queryDTO.distributionStatus != null">
            and distribution_status = #{queryDTO.distributionStatus}
        </if>
        <if test="queryDTO.buyUserId != null">
            and user_id = #{queryDTO.buyUserId}
        </if>
        <if test="queryDTO.buyStoreId != null">
            and store_id = #{queryDTO.buyStoreId}
        </if>
        <if test="queryDTO.distributionRelation != null">
            and distribution_relation = #{queryDTO.distributionRelation}
        </if>
        <if test="queryDTO.distributionUserTypes != null and queryDTO.distributionUserTypes.size() > 0">
            and distribution_user_type in
            <foreach collection="queryDTO.distributionUserTypes" item="distributionUserType" open="(" close=")"
                     separator=",">
                #{distributionUserType}
            </foreach>
        </if>
        <if test="queryDTO.distributionUserIds != null and queryDTO.distributionUserIds.size() > 0">
            and distribution_user_id in
            <foreach collection="queryDTO.distributionUserIds" item="distributionUserId" open="(" close=")"
                     separator=",">
                #{distributionUserId}
            </foreach>
        </if>
        <if test="queryDTO.distributionStoreId != null">
            and distribution_store_id = #{queryDTO.distributionStoreId}
        </if>
        <if test="queryDTO.orderType != null">
            and order_type = #{queryDTO.orderType}
        </if>
        <if test="queryDTO.developingUserId != null">
            and developing_user_id = #{queryDTO.developingUserId}
        </if>
        <if test="queryDTO.developingStoreId != null">
            and developing_store_id = #{queryDTO.developingStoreId}
        </if>
        <if test="queryDTO.payStartTime != null">
            and pay_time >= #{queryDTO.payStartTime}
        </if>
        <if test="queryDTO.payEndTime != null">
            and #{queryDTO.payEndTime} >= pay_time
        </if>
        <if test="queryDTO.createStartTime != null">
            and create_time >= #{queryDTO.createStartTime}
        </if>
        <if test="queryDTO.createEndTime != null">
            and #{queryDTO.createEndTime} >= create_time
        </if>
        <if test="queryDTO.orderIds != null and queryDTO.orderIds.size() > 0">
            and order_id in
            <foreach collection="queryDTO.orderIds" item="orderId" open="(" close=")" separator=",">
                #{orderId}
            </foreach>
        </if>
        <if test="queryDTO.isDevelopingOrder == null">
            and distribution_user_id > 0
        </if>
        <if test="queryDTO.isDevelopingOrder != null and queryDTO.isDevelopingOrder">
            and developing_user_id > 0
        </if>
        <if test="queryDTO.isDevelopingOrder != null and !queryDTO.isDevelopingOrder">
            and distribution_user_id > 0
        </if>
        <if test="queryDTO.isRefundOrder != null and queryDTO.isRefundOrder">
            and refund_status > 0
        </if>
        <if test="queryDTO.distributionStartTime != null">
            and distribution_settle_time >= #{queryDTO.distributionStartTime}
        </if>
        <if test="queryDTO.distributionEndTime != null">
            and #{queryDTO.distributionEndTime} >= distribution_settle_time
        </if>
        <if test="queryDTO.developingStartTime != null">
            and developing_settle_time >= #{queryDTO.developingStartTime}
        </if>
        <if test="queryDTO.developingEndTime != null">
            and #{queryDTO.developingEndTime} >= developing_settle_time
        </if>
        <if test="queryDTO.statusList != null and queryDTO.statusList.size() > 0">
            and status in
            <foreach collection="queryDTO.statusList" item="status" open="(" close=")" separator=",">
                #{status}
            </foreach>
        </if>
        order by create_time DESC
    </select>

    <select id="listDistributionJointVentureOrders" resultMap="esJointVentureOrderAndOrderItemAndUserAddrMap">
        SELECT o.user_id,
            o.*,
            oi.`order_item_id` oi_order_item_id,
            oi.`shop_id` oi_shop_id,
            oi.`order_id` oi_order_id,
            oi.`spu_id` oi_spu_id,
            oi.`sku_id` oi_sku_id,
            oi.`user_id` oi_user_id,
            oi.`final_refund_id` oi_final_refund_id,
            oi.`distribution_user_id` oi_distribution_user_id,
            oi.`count` oi_count,
            oi.`spu_name` oi_spu_name,
            oi.`sku_name` oi_sku_name,
            oi.`pic` oi_pic,
            oi.`is_comm` oi_is_comm,
            oi.`refund_status` oi_refund_status,
            oi.`be_delivered_num` oi_be_delivered_num,
            oi.`delivery_type` oi_delivery_type,
            oi.`shop_cart_time` oi_shop_cart_time,
            oi.`price` oi_price,
            oi.`spu_total_amount` oi_spu_total_amount,
            oi.`actual_total` oi_actual_total,
            oi.`share_reduce` oi_share_reduce,
            oi.`platform_share_reduce` oi_platform_share_reduce,
            oi.`distribution_amount` oi_distribution_amount,
            oi.`distribution_parent_amount` oi_distribution_parent_amount,
            oi.`use_score` oi_use_score,
            oi.`gain_score` oi_gain_score,
            oi.joint_venture_commission_status oi_joint_venture_commission_status,
            oi.joint_venture_refund_status oi_joint_venture_refund_status,
            orf.return_money_sts as oi_return_money_sts,
            ifnull(orf.refund_amount,0) as oi_refund_amount
        FROM `order` AS o
        JOIN order_item oi ON o.order_id = oi.order_id
        LEFT JOIN order_refund orf ON orf.refund_id = oi.final_refund_id AND orf.return_money_sts = 5
        where o.status in (5, 6)
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                order_item ioi
                INNER JOIN order_refund iorf ON iorf.refund_id = ioi.final_refund_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                AND ioi.order_item_id = oi.order_item_id
            )
        AND NOT EXISTS (
            SELECT
            1
            FROM
            `order` oo
            INNER JOIN order_refund iorf ON iorf.order_id = oo.order_id
            WHERE
            iorf.return_money_sts NOT IN (-1, 5 )
            and iorf.refund_type = 1
            AND oo.order_id = o.order_id
        )
        <if test="searchDTO.storeIdList != null">
            and o.store_id in
            <foreach collection="searchDTO.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="searchDTO.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{searchDTO.jointVentureCommissionStatus}
        </if>
        <if test="searchDTO.payStartTime != null">
            and o.pay_time >= #{searchDTO.payStartTime}
        </if>
        <if test="searchDTO.payEndTime != null">
            and #{searchDTO.payEndTime} >= o.pay_time
        </if>
        order by o.order_id desc
    </select>

    <select id="listDistributionJointVentureOrdersV2" resultMap="esJointVentureOrderAndOrderItemAndUserAddrMap">
        SELECT o.*
        FROM `order` AS o
        JOIN order_item oi ON o.order_id = oi.order_id
        LEFT JOIN order_refund orf ON orf.refund_id = oi.final_refund_id
        where o.status in (5,6)
        AND NOT EXISTS (
            SELECT
            1
            FROM
            order_item ioi
            INNER JOIN order_refund iorf ON iorf.refund_id = ioi.final_refund_id
            WHERE
            iorf.return_money_sts NOT IN (-1, 5 )
            AND ioi.order_item_id = oi.order_item_id
        )
        AND NOT EXISTS (
            SELECT
            1
            FROM
            `order` oo
            INNER JOIN order_refund iorf ON iorf.order_id = oo.order_id
            WHERE
            iorf.return_money_sts NOT IN (-1, 5 )
            and iorf.refund_type = 1
            AND oo.order_id = o.order_id
        )
        <if test="searchDTO.storeIdList != null">
            and o.store_id in
            <foreach collection="searchDTO.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="searchDTO.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{searchDTO.jointVentureCommissionStatus}
        </if>
        <if test="searchDTO.payStartTime != null">
            and o.pay_time >= #{searchDTO.payStartTime}
        </if>
        <if test="searchDTO.payEndTime != null">
            and #{searchDTO.payEndTime} >= o.pay_time
        </if>
        order by o.order_id desc
    </select>

    <select id="listDistributionJointVentureRefundOrders" parameterType="com.mall4j.cloud.api.order.dto.DistributionJointVentureOrderRefundSearchDTO" resultType="com.mall4j.cloud.api.order.dto.DistributionJointVentureOrderRefundRespDTO">
        SELECT a.order_id,a.order_number,b.refund_id,b.refund_amount,b.refund_time,b.order_item_id,c.sku_id,c.count
        FROM `order_refund` AS b
        left join `order` a on a.order_id=b.order_id
        left join order_item c on b.order_item_id=c.order_item_id
        <where>
            and b.return_money_sts in(5)
            and a.joint_venture_commission_status = 0
            and b.joint_venture_refund_status = 0
            <if test="searchDTO.storeIdList != null">
                and a.store_id in
                <foreach collection="searchDTO.storeIdList" item="storeId" open="(" close=")" separator=",">
                    #{storeId}
                </foreach>
            </if>
            <if test="searchDTO.refundStartTime != null">
                and b.refund_time >= #{searchDTO.refundStartTime}
            </if>
            <if test="searchDTO.refundEndTime != null">
                and #{searchDTO.refundEndTime} >= b.refund_time
            </if>
        </where>
    </select>

    <select id="totalDistributionJointVenturePayRefund" parameterType="com.mall4j.cloud.api.order.dto.DistributionJointVentureOrderRefundSearchDTO" resultType="com.mall4j.cloud.api.order.dto.DistributionJointVentureOrderPayRefundRespDTO">
        SELECT IFNULL(SUM(o.actual_total),0) AS payActualTotal ,
        IFNULL(sum(o.freight_amount),0) as freightAmountTotal,
        (SELECT IFNULL(SUM(order_refund.refund_amount),0) AS refundAmountTotal
            FROM order_refund left join `order` on order_refund.order_id=`order`.order_id
            WHERE
            <if test="searchDTO.storeIdList != null and searchDTO.storeIdList.size()>0">
                order_refund.shop_id in
                <foreach collection="searchDTO.storeIdList" item="storeId" open="(" close=")" separator=",">
                    #{storeId}
                </foreach>
            </if>
            <if test="searchDTO.refundStartTime != null">
                AND order_refund.refund_time >= #{searchDTO.refundStartTime}
            </if>
            <if test="searchDTO.refundEndTime != null">
                AND order_refund.refund_time &lt;= #{searchDTO.refundEndTime}
            </if>
            <if test="searchDTO.jointVentureCommissionStatus != null">
                and `order`.joint_venture_commission_status=#{searchDTO.jointVentureCommissionStatus}
            </if>
            <if test="searchDTO.jointVentureCommissionStatus == null">
                and `order`.joint_venture_commission_status != -1
            </if>
            <if test="searchDTO.jointVentureRefundStatus != null">
                and `order_refund`.joint_venture_refund_status = #{searchDTO.jointVentureRefundStatus}
            </if>
            AND order_refund.return_money_sts in (5)
        ) as refundAmountTotal
        FROM `order` o
        WHERE 1=1
            and o.`status` in ( 5,6 )
            AND o.is_payed = 1
            AND NOT EXISTS (
                SELECT
                1
                FROM
                order_item ioi
                INNER JOIN order_refund iorf ON iorf.refund_id = ioi.final_refund_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                AND ioi.order_id = o.order_id
            )
            AND NOT EXISTS (
                SELECT
                1
                FROM
                `order` oo
                INNER JOIN order_refund iorf ON iorf.order_id = oo.order_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                and iorf.refund_type = 1
                AND oo.order_id = o.order_id
            )
        <if test="searchDTO.storeIdList != null and searchDTO.storeIdList.size()>0">
            AND o.store_id IN
            <foreach collection="searchDTO.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="searchDTO.refundStartTime != null">
            AND o.pay_time >= #{searchDTO.refundStartTime}
        </if>
        <if test="searchDTO.refundEndTime != null">
            AND o.pay_time &lt;= #{searchDTO.refundEndTime}
        </if>
        <if test="searchDTO.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status=#{searchDTO.jointVentureCommissionStatus}
        </if>
        <if test="searchDTO.jointVentureCommissionStatus == null">
            and o.joint_venture_commission_status != -1
        </if>
    </select>

    <select id="countDistributionRanking" resultType="java.lang.Integer">
        SELECT
        o1.ranking
        FROM
        (
        SELECT
        o.user_id,
        RANK ( ) OVER ( ORDER BY o.r DESC ) ranking
        FROM
        ( SELECT
        o2.user_id AS user_id,
        sum(o2.r) AS r
        FROM (
        SELECT distribution_user_id AS user_id, sum( actual_total ) AS r
        FROM `order`
        WHERE distribution_user_type = 1
        AND `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            AND distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and distribution_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.staffIds != null and distributionSalesStatDTO.staffIds.size() != 0">
            and distribution_user_id in
            <foreach collection="distributionSalesStatDTO.staffIds" item="staffId" separator="," open="(" close=")">
                #{staffId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        GROUP BY distribution_user_id
        UNION ALL
        SELECT developing_user_id AS user_id, sum( actual_total ) AS r
        FROM `order`
        WHERE developing_user_id > 0
        AND `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            AND developing_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and developing_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.staffIds != null and distributionSalesStatDTO.staffIds.size() != 0">
            and developing_user_id in
            <foreach collection="distributionSalesStatDTO.staffIds" item="staffId" separator="," open="(" close=")">
                #{staffId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        GROUP BY developing_user_id
        ) AS o2 GROUP BY o2.user_id
        ) AS o
        ) AS o1
        WHERE
        o1.user_id = #{distributionSalesStatDTO.distributionUserId}
    </select>

    <select id="distributionSalesStat" resultType="java.lang.Long">
        select IFNULL(sum(actual_total),0) from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (
                (distribution_user_type = 1 and distribution_user_id = #{distributionSalesStatDTO.distributionUserId})
                or developing_user_id = #{distributionSalesStatDTO.distributionUserId}
                )
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and (distribution_user_type = 1 and distribution_user_id =
                    #{distributionSalesStatDTO.distributionUserId})
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_user_id = #{distributionSalesStatDTO.distributionUserId}
                </if>
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2 and distribution_user_id = #{distributionSalesStatDTO.distributionUserId}
        </if>
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            AND (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} OR developing_store_id =
            #{distributionSalesStatDTO.distributionStoreId})
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        <if test="distributionSalesStatDTO.distributionRelation != null">
            and distribution_relation = #{distributionSalesStatDTO.distributionRelation}
        </if>
    </select>
    <select id="countDistributionOrderNum" resultType="java.lang.Integer">
        select count(order_id) from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (
                (distribution_user_type = 1 and distribution_user_id = #{distributionSalesStatDTO.distributionUserId})
                or developing_user_id = #{distributionSalesStatDTO.distributionUserId}
                )
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and (distribution_user_type = 1 and distribution_user_id =
                    #{distributionSalesStatDTO.distributionUserId})
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_user_id = #{distributionSalesStatDTO.distributionUserId}
                </if>
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2 and distribution_user_id = #{distributionSalesStatDTO.distributionUserId}
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
    </select>
    <select id="countDistributionOrderUserNum" resultType="java.lang.Integer">
        select count(o.order_id) from (
        select order_id from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (
                (distribution_user_type = 1 and distribution_user_id = #{distributionSalesStatDTO.distributionUserId})
                or developing_user_id = #{distributionSalesStatDTO.distributionUserId}
                )
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and (distribution_user_type = 1 and distribution_user_id =
                    #{distributionSalesStatDTO.distributionUserId})
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_user_id = #{distributionSalesStatDTO.distributionUserId}
                </if>
            </if>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2 and distribution_user_id = #{distributionSalesStatDTO.distributionUserId}
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by user_id
        ) as o
    </select>

    <select id="storeDistributionSalesStat" resultType="java.lang.Long">
        select (IFNULL(sum(actual_total),0) - IFNULL(sum(freight_amount),0)) from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (distribution_user_type = 1 or developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and (distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                or developing_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                )
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
            </if>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
    </select>

    <select id="countStoreDistributionOrderNum" resultType="java.lang.Integer">
        select count(order_id) from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (distribution_user_type = 1 or developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and (distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                or developing_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                )
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
            </if>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
    </select>

    <select id="countStoreDistributionUserNum" resultType="java.lang.Integer">
        select count(o.order_id) from (
        select order_id from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (distribution_user_type = 1 or developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and (distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                or developing_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                )
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserIds != null and distributionSalesStatDTO.distributionUserIds.size() != 0">
            and distribution_user_id in
            <foreach collection="distributionSalesStatDTO.distributionUserIds" item="distributionUserId" separator=","
                     open="(" close=")">
                #{distributionUserId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by distribution_user_id
        ) as o
    </select>
    <select id="countStoreDistributionCommission" resultType="java.lang.Long">
        select IFNULL(sum(distribution_amount),0) from `order` where `status` in (2,3,5)
        and distribution_amount > 0
        <if test="distributionSalesStatDTO.settlement == null">
            and distribution_status = 0
        </if>
        <if test="distributionSalesStatDTO.settlement != null">
            and distribution_status in (1, 2)
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (distribution_user_type = 1 or developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
    </select>
    <select id="countStoreDistributionOrderUserNum" resultType="java.lang.Integer">
        select count(o.order_id) from (
        select order_id from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (distribution_user_type = 1 or developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by user_id
        ) as o
    </select>

    <select id="countStoreDistributionOrderUserAmount" resultType="java.lang.Long">
        select (IFNULL(sum(actual_total),0) - IFNULL(sum(freight_amount),0)) from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (distribution_user_type = 1 or developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
    </select>
    <select id="countDistributionStoreRanking" resultType="java.lang.Integer">
        SELECT o1.ranking
        FROM (
                 SELECT o.distribution_store_id,
                        o.developing_store_id,
                        o.distribution_user_type,
                        RANK() OVER ( ORDER BY o.r DESC ) ranking
                 FROM (SELECT distribution_store_id, developing_store_id, distribution_user_type, sum(actual_total) AS r
                       FROM `order`
                       WHERE is_payed = 1
                       GROUP BY distribution_store_id, developing_store_id) AS o
             ) AS o1
        WHERE (o1.distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} OR
               o1.developing_store_id = #{distributionSalesStatDTO.distributionStoreId})
    </select>

    <select id="countDistributionOrderStaffNum" resultType="java.lang.Integer">
        select count(o1.staffId) from (
        select o.staffId from (
        select order_id, distribution_user_id as staffId from `order` where `status` in (2,3,5)
        and distribution_user_type = 1 and distribution_user_id > 0
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by distribution_user_id
        union all
        select order_id, developing_user_id as staffId from `order` where `status` in (2,3,5)
        and distribution_user_type = 2 and developing_user_id > 0
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            and developing_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by developing_user_id
        ) as o group by o.staffId
        ) as o1
    </select>

    <select id="countDistributionOrderSpuNum" resultType="java.lang.Integer">
        select count(all_count) from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
            #{distributionSalesStatDTO.distributionStoreId})
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
    </select>

    <select id="countDistributionOrderTotalPrice" resultType="java.lang.Long">
        select count(total) from `order` where `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            and (distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or developing_store_id =
            #{distributionSalesStatDTO.distributionStoreId})
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
    </select>

    <select id="countOrderAmountByUserId" resultType="java.lang.Long">
        select (IFNULL(sum(actual_total),0) - IFNULL(sum(freight_amount),0)) from `order` where user_id = #{userId}
        and `status` in (2,3,5)
        <if test="startTime != null">
            and create_time <![CDATA[>=]]> #{startTime}
        </if>
        <if test="endTime != null">
            and create_time <![CDATA[<=]]> #{endTime}
        </if>
    </select>

    <select id="listDistributionRanking" resultType="com.mall4j.cloud.order.dto.app.DistributionRankingDTO">
        select
        IFNULL(sum(a.totalSales), 0) as totalSales,
        IFNULL(sum(a.commission), 0) as commission,
        a.staffId as staffId
        from (
        select
        (IFNULL(sum(actual_total),0) - IFNULL(sum(freight_amount),0)) as totalSales,
        IFNULL(sum(distribution_amount), 0) as commission,
        distribution_user_id as staffId
        from `order` where `status` in (2,3,5)
        and distribution_user_type = 1
        and distribution_user_id > 0
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and distribution_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.staffIds != null and distributionSalesStatDTO.staffIds.size() != 0">
            and distribution_user_id in
            <foreach collection="distributionSalesStatDTO.staffIds" item="staffId" separator="," open="(" close=")">
                #{staffId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by distribution_user_id
        union all
        select
        (IFNULL(sum(actual_total),0) - IFNULL(sum(freight_amount),0)) as totalSales,
        IFNULL(sum(developing_amount), 0) as commission,
        developing_user_id as staffId
        from `order` where `status` in (2,3,5)
        and developing_store_id > 0
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and developing_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.userIds != null and distributionSalesStatDTO.userIds.size() != 0">
            and user_id in
            <foreach collection="distributionSalesStatDTO.userIds" item="userId" separator="," open="(" close=")">
                #{userId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.staffIds != null and distributionSalesStatDTO.staffIds.size() != 0">
            and developing_user_id in
            <foreach collection="distributionSalesStatDTO.staffIds" item="staffId" separator="," open="(" close=")">
                #{staffId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by developing_user_id
        ) as a
        group by staffId
        order by totalSales desc
    </select>
    <select id="pageStoreStatistics" resultType="com.mall4j.cloud.order.vo.DistributionStoreStatisticsVO">
        SELECT
        distribution_store_id as storeId,
        sum( actual_total ) as sales,
        count( order_id ) as orderNum
        FROM
        `order`
        WHERE
        `status` in (2,3,5)
        and distribution_store_id > 0
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            and distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and distribution_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        GROUP BY
        distribution_store_id
    </select>
    <select id="countDistributionCommission" resultType="java.lang.Long">
        select IFNULL(sum(c.commission), 0)
        from (
        select
        IFNULL(sum(distribution_amount), 0) as commission
        from `order` where `status` in (2,3,5)
        and distribution_user_type = 1
        and distribution_user_id = #{distributionSalesStatDTO.distributionUserId}
        <if test="distributionSalesStatDTO.orderIds != null and distributionSalesStatDTO.orderIds.size() != 0">
            and order_id in
            <foreach collection="distributionSalesStatDTO.orderIds" item="orderId" separator="," open="(" close=")">
                #{orderId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        union all
        select
        IFNULL(sum(developing_amount), 0) as commission
        from `order` where `status` in (2,3,5)
        and developing_store_id > 0
        and developing_user_id = #{distributionSalesStatDTO.distributionUserId}
        <if test="distributionSalesStatDTO.orderIds != null and distributionSalesStatDTO.orderIds.size() != 0">
            and order_id in
            <foreach collection="distributionSalesStatDTO.orderIds" item="orderId" separator="," open="(" close=")">
                #{orderId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        ) as c
    </select>
    <select id="listDistributionStaffExcel"
            resultType="com.mall4j.cloud.api.order.vo.DistributionStaffExcelVO">
        SELECT
        o2.storeId AS storeId,
        o2.user_id AS staffId,
        sum(o2.distributionSales) AS distributionSales,
        sum(o2.developingSales) AS developingSales
        FROM (
        SELECT distribution_store_id AS storeId, distribution_user_id AS user_id, sum( actual_total ) AS distributionSales, 0 AS developingSales
        FROM `order`
        WHERE distribution_user_type = 1
        AND distribution_user_id > 0
        AND `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            AND distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and distribution_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.staffIds != null and distributionSalesStatDTO.staffIds.size() != 0">
            and distribution_user_id in
            <foreach collection="distributionSalesStatDTO.staffIds" item="staffId" separator="," open="(" close=")">
                #{staffId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        GROUP BY distribution_user_id
        UNION ALL
        SELECT developing_store_id AS storeId, developing_user_id AS user_id, 0 AS distributionSales, sum( actual_total ) AS developingSales
        FROM `order`
        WHERE developing_user_id > 0
        AND `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            AND developing_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and developing_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.staffIds != null and distributionSalesStatDTO.staffIds.size() != 0">
            and developing_user_id in
            <foreach collection="distributionSalesStatDTO.staffIds" item="staffId" separator="," open="(" close=")">
                #{staffId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        GROUP BY developing_user_id
        ) AS o2 GROUP BY o2.user_id
    </select>
    <select id="listDistributionWitkeyExcel"
            resultType="com.mall4j.cloud.api.order.vo.DistributionWitkeyExcelVO">
        SELECT distribution_store_id AS storeId, distribution_user_id AS userId, sum( actual_total ) AS distributionSales, sum( distribution_amount ) AS distributionCommission
        FROM `order`
        WHERE distribution_user_type = 2
        AND distribution_user_id > 0
        AND `status` in (2,3,5)
        <if test="distributionSalesStatDTO.distributionStoreId != null">
            AND distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
        </if>
        <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
            and distribution_store_id in
            <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                #{storeId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        GROUP BY distribution_user_id
    </select>
    <select id="countStoreDistributionWitkeyNum" resultType="java.lang.Integer">
        select count(o.order_id) from (
        select oo.order_id from `order` oo
        left join mall4cloud_user.`user` u on oo.user_id = u.user_id
        where oo.`status` in (2,3,5)
        and u.status = 1
        <if test="queryDTO.storeId != null">
            and u.store_id = #{queryDTO.storeId}
        </if>
        <if test="queryDTO.witkey">
            and u.veeker_audit_status = 2
            <if test="queryDTO.startTime != null and queryDTO.endTime != null">
                and u.veeker_apply_time between #{queryDTO.startTime} and #{queryDTO.endTime}
            </if>
        </if>
        <if test="!queryDTO.witkey">
            <if test="queryDTO.recruit">
                and u.staff_id != 0
            </if>
            <if test="queryDTO.startTime != null and queryDTO.endTime != null">
                and u.create_time between #{queryDTO.startTime} and #{queryDTO.endTime}
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (oo.distribution_user_type = 1 or oo.developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and oo.distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and oo.developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (oo.distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or oo.developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and (oo.distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                or oo.developing_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
                )
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and oo.distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and oo.distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
            <if test="distributionSalesStatDTO.storeIds != null and distributionSalesStatDTO.storeIds.size() != 0">
                and oo.distribution_store_id in
                <foreach collection="distributionSalesStatDTO.storeIds" item="storeId" separator="," open="(" close=")">
                    #{storeId}
                </foreach>
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserIds != null and distributionSalesStatDTO.distributionUserIds.size() != 0">
            and oo.distribution_user_id in
            <foreach collection="distributionSalesStatDTO.distributionUserIds" item="distributionUserId" separator=","
                     open="(" close=")">
                #{distributionUserId}
            </foreach>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and oo.create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and oo.create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and oo.distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and oo.distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by oo.distribution_user_id
        ) as o
    </select>
    <select id="countStoreOrderUserNum" resultType="java.lang.Integer">
        select count(o.order_id) from (
        select oo.order_id from `order` oo
        left join mall4cloud_user.`user` u on oo.user_id = u.user_id
        where oo.`status` in (2,3,5)
        <if test="queryDTO.storeId != null">
            and u.store_id = #{queryDTO.storeId}
        </if>
        <if test="queryDTO.witkey">
            and u.veeker_audit_status = 2
            <if test="queryDTO.startTime != null and queryDTO.endTime != null">
                and u.veeker_apply_time between #{queryDTO.startTime} and #{queryDTO.endTime}
            </if>
        </if>
        <if test="!queryDTO.witkey">
            <if test="queryDTO.recruit">
                and u.staff_id != 0
            </if>
            <if test="queryDTO.startTime != null and queryDTO.endTime != null">
                and u.create_time between #{queryDTO.startTime} and #{queryDTO.endTime}
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (oo.distribution_user_type = 1 or oo.developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and oo.distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and oo.developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (oo.distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or oo.developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and oo.distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and oo.distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and oo.create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and oo.create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and oo.distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and oo.distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
        group by oo.user_id
        ) as o
    </select>
    <select id="countStoreOrderUserAmount" resultType="java.lang.Long">
        select (IFNULL(sum(oo.actual_total),0) - IFNULL(sum(oo.freight_amount),0)) from `order` oo
        left join mall4cloud_user.`user` u on oo.user_id = u.user_id
        where oo.`status` in (2,3,5)
        <if test="queryDTO.storeId != null">
            and u.store_id = #{queryDTO.storeId}
        </if>
        <if test="queryDTO.witkey">
            and u.veeker_audit_status = 2
            <if test="queryDTO.startTime != null and queryDTO.endTime != null">
                and u.veeker_apply_time between #{queryDTO.startTime} and #{queryDTO.endTime}
            </if>
        </if>
        <if test="!queryDTO.witkey">
            <if test="queryDTO.recruit">
                and u.staff_id != 0
            </if>
            <if test="queryDTO.startTime != null and queryDTO.endTime != null">
                and u.create_time between #{queryDTO.startTime} and #{queryDTO.endTime}
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 1">
            <if test="distributionSalesStatDTO.type == null">
                and (oo.distribution_user_type = 1 or oo.developing_store_id > 0)
            </if>
            <if test="distributionSalesStatDTO.type != null">
                <if test="distributionSalesStatDTO.type == 1">
                    and oo.distribution_user_type = 1
                </if>
                <if test="distributionSalesStatDTO.type == 2">
                    and oo.developing_store_id > 0
                </if>
            </if>
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and (oo.distribution_store_id = #{distributionSalesStatDTO.distributionStoreId} or oo.developing_store_id =
                #{distributionSalesStatDTO.distributionStoreId})
            </if>
        </if>
        <if test="distributionSalesStatDTO.distributionUserType == 2">
            and oo.distribution_user_type = 2
            <if test="distributionSalesStatDTO.distributionStoreId != null">
                and oo.distribution_store_id = #{distributionSalesStatDTO.distributionStoreId}
            </if>
        </if>
        <if test="distributionSalesStatDTO.startTime != null">
            and oo.create_time <![CDATA[>=]]> #{distributionSalesStatDTO.startTime}
        </if>
        <if test="distributionSalesStatDTO.endTime != null">
            and oo.create_time <![CDATA[<=]]> #{distributionSalesStatDTO.endTime}
        </if>
        <if test="distributionSalesStatDTO.accountStartTime != null">
            and oo.distribution_settle_time <![CDATA[>=]]> #{distributionSalesStatDTO.accountStartTime}
        </if>
        <if test="distributionSalesStatDTO.accountEndTime != null">
            and oo.distribution_settle_time <![CDATA[<=]]> #{distributionSalesStatDTO.accountEndTime}
        </if>
    </select>

    <update id="editPlatformRemark">
        update `order`
        set platform_remarks = #{remark}
        where order_id = #{orderId}
    </update>

    <update id="updateBatchDistributionAmount">
        <foreach collection="orders" item="order" separator=";">
            update `order` set `distribution_amount` = #{order.distributionAmount}, `developing_amount` =
            #{order.developingAmount}
            where order_id = #{order.orderId}
        </foreach>
    </update>
    <update id="updateDistributionStatusBatchById">
        update `order` set `distribution_status` = #{distributionStatus}
        <if test="distributionSettleTime != null">
            , `distribution_settle_time` = #{distributionSettleTime}
        </if>
        <if test="distributionWithdrawTime != null">
            , `distribution_withdraw_time` = #{distributionWithdrawTime}
        </if>
        where `order_id` IN
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </update>
    <update id="updateDevelopingStatusBatchById">
        update `order` set `developing_status` = #{developingStatus}
        <if test="developingSettleTime != null">
            , `developing_settle_time` = #{developingSettleTime}
        </if>
        <if test="developingWithdrawTime != null">
            , `developing_withdraw_time` = #{developingWithdrawTime}
        </if>
        where `order_id` IN
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </update>

    <select id="yesterdayOrderStatistics" resultType="com.mall4j.cloud.order.vo.YesterdayOrderStatisticsVO">
        select
            (select IFNULL(sum(actual_total/100) ,0) from `order` where create_time BETWEEN #{beginTime} and #{endTime}) as giveOrderAmountSum,
            (select IFNULL(count(1) ,0) from `order` where create_time BETWEEN #{beginTime} and #{endTime}) as giveOrderNumSum,
            (select IFNULL(sum(actual_total/100) ,0) from `order` where  is_payed = 1 and create_time BETWEEN #{beginTime} and #{endTime} ) as paymentAmountSum,
            (select IFNULL(count(1) ,0) from `order` where is_payed = 1 and create_time BETWEEN #{beginTime} and #{endTime} ) as payedNumSum
        from dual;
    </select>

    <update id="syncWechatOrderId">
        update `order` set `wechat_order_id` = #{wechatOrderId}
        where `order_id` = #{orderId}
    </update>

    <update id="syncWeichatPromotionInfo">
        update `order`
        set `promoter_id`     = #{syncWeichatPromotionInfoDTO.promoterId},
            `finder_nickname` = #{syncWeichatPromotionInfoDTO.finderNickname},
            `sharer_openid`   = #{syncWeichatPromotionInfoDTO.sharerOpenid}
        where `order_number` = #{syncWeichatPromotionInfoDTO.orderNumber}
    </update>

    <update id="syncChannelsSharerInfo">
        update `order`
        set `sharer_openid`   = #{syncSharerInfoRequest.sharerOpenid}
        where `order_id` = #{syncSharerInfoRequest.orderId}
    </update>
    <update id="updateJointVentureCommissionStatusBatchById">
        update `order` set `joint_venture_commission_status` = #{jointVentureCommissionStatus}
        <if test="jointVentureRefundStatus != null">
            ,`joint_venture_refund_status` = #{jointVentureRefundStatus}
        </if>
        <if test="jointVentureSettleTime != null">
            , `joint_venture_settle_time` = #{jointVentureSettleTime}
        </if>
        where `order_id` IN
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </update>

    <select id="userConsumeAmount" resultType="java.lang.Long">
        select (
                   select ifnull(sum(actual_total), 0)
                   from `order`
                   where user_id = #{userId}
                     and pay_time between #{beginTime} and #{endTime}
               ) -
               (
                   select ifnull(sum(refund_amount), 0)
                   from `order_refund`
                   where user_id = #{userId}
                     and decision_time between #{beginTime} and #{endTime}
               )
        from dual
    </select>
    <select id="listDistributionJointVentureOrderCount" resultType="java.lang.Long">
        select
        count(*)
        from `order` o
        where o.status in (5, 6)
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                order_item ioi
                INNER JOIN order_refund iorf ON iorf.refund_id = ioi.final_refund_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                AND ioi.order_id = o.order_id
            )
            AND NOT EXISTS (
                SELECT
                1
                FROM
                `order` oo
                INNER JOIN order_refund iorf ON iorf.order_id = oo.order_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                and iorf.refund_type = 1
                AND oo.order_id = o.order_id
            )
        <if test="order.storeIdList != null">
            and o.store_id in
            <foreach collection="order.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="order.selectedOrderIdList != null and order.selectedOrderIdList.size() >0">
            and o.order_id in
            <foreach collection="order.selectedOrderIdList" item="orderId" open="(" close=")" separator=",">
                #{orderId}
            </foreach>
        </if>
        <if test="order.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{order.jointVentureCommissionStatus}
        </if>
        <if test="order.payStartTime != null">
            and o.pay_time >= #{order.payStartTime}
        </if>
        <if test="order.payEndTime != null">
            and #{order.payEndTime} >= o.pay_time
        </if>
    </select>
    <select id="listDistributionJointVentureOrder" resultMap="jointVentureOrderVO">
        SELECT data.*,oi.order_item_id,oi.sku_id,oi.user_id,oi.count,oi.spu_name,oi.sku_name,oi.pic,
        oi.is_comm,oi.spu_id,oi.be_delivered_num,oi.actual_total AS item_actual_total,oi.share_reduce,
        oi.delivery_type as item_delivery_type, oi.platform_share_reduce,oi.price,oi.shop_cart_time,oi.spu_total_amount,
        oi.refund_status AS item_refund_status,oi.score_fee,oi.type
        FROM
        (
        SELECT
        o.order_id,o.order_number,o.actual_total,o.order_score,o.status,order_type,o.refund_status,o.delivery_type,o.shop_name,
        o.shop_id,o.order_addr_id,o.freight_amount,o.create_time,o.all_count,o.total,o.score_amount,o.platform_amount,o.tentacle_no,
        o.platform_free_freight_amount,o.reduce_amount,o.pay_type,oa.consignee,oa.mobile,oiv.order_invoice_id,
        o.remarks,o.platform_remarks,o.order_source,o.source_Id,o.store_id,o.trace_id,o.joint_venture_commission_status,o.joint_venture_refund_status
        FROM
        `order` o
        LEFT JOIN order_addr oa ON oa.order_addr_id = o.order_addr_id
        LEFT JOIN order_invoice oiv ON oiv.order_id = o.order_id
        where o.status in (5, 6)
            AND NOT EXISTS (
                SELECT
                    1
                FROM
                order_item ioi
                INNER JOIN order_refund iorf ON iorf.refund_id = ioi.final_refund_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                AND ioi.order_id = o.order_id
            )
            AND NOT EXISTS (
                SELECT
                1
                FROM
                `order` oo
                INNER JOIN order_refund iorf ON iorf.order_id = oo.order_id
                WHERE
                iorf.return_money_sts NOT IN (-1, 5 )
                and iorf.refund_type = 1
                AND oo.order_id = o.order_id
            )
        <if test="order.storeIdList != null">
            and o.store_id in
            <foreach collection="order.storeIdList" item="storeId" open="(" close=")" separator=",">
                #{storeId}
            </foreach>
        </if>
        <if test="order.selectedOrderIdList != null and order.selectedOrderIdList.size() >0">
            and o.order_id in
            <foreach collection="order.selectedOrderIdList" item="orderId" open="(" close=")" separator=",">
                #{orderId}
            </foreach>
        </if>
        <if test="order.jointVentureCommissionStatus != null">
            and o.joint_venture_commission_status = #{order.jointVentureCommissionStatus}
        </if>
        <if test="order.payStartTime != null">
            AND o.pay_time &gt;= #{order.payStartTime}
        </if>
        <if test="order.payEndTime != null">
            AND o.pay_time &lt;= #{order.payEndTime}
        </if>
        ORDER BY o.create_time DESC
        LIMIT #{pageAdapter.begin}, #{pageAdapter.size}
        ) data
        LEFT JOIN order_item oi ON data.order_id = oi.order_id
    </select>
    <select id="calculateDistributionCommissionByUserId"
            resultType="com.mall4j.cloud.api.order.vo.CalculateDistributionCommissionResultVO">
        SELECT
            sum( waitDistributionCommission ) waitDistributionCommission,
            sum( canWithdrawDistribution ) canWithdrawDistribution,
            sum( waitDevelopingCommission ) waitDevelopingCommission,
            sum( canWithdrawDeveloping ) canWithdrawDeveloping
        FROM
            (
                SELECT
                    #{userId} AS userId,
                    ifnull( sum( CASE distribution_status WHEN 0 THEN distribution_amount ELSE 0 END ), 0 ) waitDistributionCommission,
                    ifnull( sum( CASE distribution_status WHEN 1 THEN distribution_amount ELSE 0 END ), 0 ) canWithdrawDistribution,
                    0 waitDevelopingCommission,
                    0 canWithdrawDeveloping
                FROM
                    `order`
                WHERE
                    distribution_user_id = #{userId}
                  AND distribution_status IN ( 0, 1 )
                  AND distribution_amount > 0 UNION ALL
                SELECT
                    #{userId} AS userId,
                    0 waitDistributionCommission,
                    0 canWithdrawDistribution,
                    ifnull( sum( CASE developing_status WHEN 0 THEN developing_amount ELSE 0 END ), 0 ) waitDevelopingCommission,
                    ifnull( sum( CASE developing_status WHEN 1 THEN developing_amount ELSE 0 END ), 0 ) canWithdrawDeveloping
                FROM
                    `order`
                WHERE
                    developing_user_id = #{userId}
                  AND developing_status IN ( 0, 1 )
                  AND developing_amount > 0
            ) t
        GROUP BY
            userId
    </select>
    <select id="getMatchedOrderIdList" resultType="java.lang.Long">
        select order_id
        from `order`
        <where>
            <if test="orderSearchDTO.payStartTime != null">
                AND pay_time &gt;= #{orderSearchDTO.payStartTime}
            </if>
            <if test="orderSearchDTO.payEndTime != null">
                AND pay_time &lt;= #{orderSearchDTO.payEndTime}
            </if>
            <if test="orderSearchDTO.orderNumber != null and orderSearchDTO.orderNumber!=''">
                AND order_number = #{orderSearchDTO.orderNumber}
            </if>
            <if test="orderSearchDTO.distributionUserIdList != null and orderSearchDTO.distributionUserIdList.size() > 0">
                AND distribution_user_id IN
                <foreach collection="orderSearchDTO.distributionUserIdList" item="distributionUserId" open="(" close=")"
                         separator=",">
                    #{distributionUserId}
                </foreach>
            </if>
            <if test="orderSearchDTO.developingUserIdList != null and orderSearchDTO.developingUserIdList.size() > 0">
                AND developing_user_id IN
                <foreach collection="orderSearchDTO.developingUserIdList" item="developingUserId" open="(" close=")"
                         separator=",">
                    #{developingUserId}
                </foreach>
            </if>
        </where>
    </select>

    <select id="checkIsOrderIntoShops" resultType="java.lang.Integer">
        SELECT COUNT(order_id) FROM `order`
        WHERE `user_id` = #{userId}
            AND pay_time BETWEEN #{startTime} AND #{endTime}
            <if test="orderNum != null">
                AND actual_total >= #{orderNum}
            </if>
            <if test="storeIdList != null and storeIdList.size() > 0">
                AND store_id IN
                <foreach collection="storeIdList" item="storeId" open="(" close=")" separator=",">
                    #{storeId}
                </foreach>
            </if>
    </select>

    <update id="syncFinderOpenid">
        update `order`
            set promoter_id = #{finderId},
                finder_nickname = #{finderName},
                store_id = #{storeId}
        where order_id = #{orderId}
    </update>



</mapper>
